161700*----------------------------------------------------------------
161800*02220000    External                               |f|
161900*----------------------------------------------------------------
162000     DISPLAY "<>>>>FLOW MSG: FNIPT03 BEGIN EXECUTION";
162100     PERFORM PARA-FNIPT03;
162200     CALL "FNIPTS3" USING llinker pass-count fail-count;
162300     STOP RUN.
162400
162500 PARA-FNIPT03.
162600*-----------------------------------------------------------------
162700*11301200                  COMP-1  (SHORT FLOATING)
162800*11302000      Level:                               | |
162900*11302300        49 (elementary item in structure)  |f|
163000*11302600        77 (elementary)                    |f|
163100*11304100          Fixed-length table:              | |
163200*11304110            literal:                       | |
163300*11304113              Subscript = 1                |f|
163400*11304114              Subscript = length/2 & > 1   |f|
163500*11304115              Subscript = length - 1       |f|
163600*11304116              Subscript = length           |f|
163700*11304120            data-name [ÃÆÃâÃâ Ã¢â¬â¢ÃÆÃ¢â¬Â ÃÂ¢Ã¢âÂ¬Ã¢âÂ¢ÃÆÃâÃ
163800*11304123              Subscript = 1                |f|
163900*11304124              Subscript = length/2 & > 1   |f|
164000*11304125              Subscript = length - 1       |f|
164100*11304126              Subscript = length           |f|
164200*11313000      OCCURS .. :                          | |
164300*11313100        integer-2 TIMES                    | |
164400*11313101          (fixed-length table)             |f|
164500*11314300        WORKING-STORAGE                    |f|
164600*------------------------------------------------------
164700*    variables used by FNIPT03
164800*TEST-VALUE        value passed to the INTEGER-PART function
164900*EXPECTED-RESULTS  the table accesed to look-up expected output
165000*ACTUAL-RESULT     holds the actual result from INTEGER-PART
165100*NUM-OF-TEST       the number of tests in this run
165200*------------------------------------------------------
165300     MOVE 0 TO ANY-FAILED;
165400     MOVE 15 TO NUM-COMP-1;
165500     MOVE 33 TO NUM-COMP-2;
165600     MOVE 30 TO NUM-COMP-3;
165700     MOVE 30 TO NUM-DISPLAY;
165800     MOVE 8  TO NUM-HALFWD;
165900     MOVE 16 TO NUM-FULLWD;
166000     MOVE 36 TO NUM-TWINFW;
166100     MOVE 0 TO pass-count;
166200     MOVE 0 TO fail-count;
166300     COMPUTE NUM-OF-TEST = 15;
166400      PERFORM VARYING II FROM 1 BY 1 UNTIL II = NUM-OF-TEST + 1;
166500        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
166600          COMPUTE
166700               ACTUAL-RESULT-C1 =
166800               FUNCTION INTEGER-PART(TEST-VALUEC1(II, JJ));
166900          IF ACTUAL-RESULT-C1 =
167000                     EXPECTED-RESULTSC1(II) THEN
167100             ADD 1 TO pass-count
167200          ELSE
167300             DISPLAY "COMP-1 TEST " II "," JJ " FAILED:"
167400             DISPLAY "test-value = " TEST-VALUEC1(II, JJ)
167500             DISPLAY "expected-result = " EXPECTED-RESULTSC1(II)
167600             DISPLAY "actual-result = " ACTUAL-RESULT-C1
167700             DISPLAY " "
167800             ADD 1 TO fail-count
167900             END-IF
168000        END-PERFORM;
168100      END-PERFORM;
168200
168300       IF fail-count NOT = ZERO AND
168400       pass-count NOT = NUM-OF-TEST * 3
168500       THEN
168600         DISPLAY "COMP-1 FAILURE";
168700         MOVE 1 TO ANY-FAILED;
168800       END-IF;
168900*-----------------------------------------------------------------
169000* 11301300                  COMP-2  (LONG FLOATING)
169100*-----------------------------------------------------------------
169200     MOVE NUM-COMP-2 TO NUM-OF-TEST;
169300      PERFORM VARYING II FROM 2 BY 1 UNTIL II = NUM-OF-TEST + 2;
169400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
169500          COMPUTE
169600               ACTUAL-RESULT-C2 =
169700               FUNCTION INTEGER-PART(TEST-VALUEC2(II - 1, JJ));
169800          IF ACTUAL-RESULT-C2 = EXPECTED-RESULTSC2(II - 1)
169900           THEN
170000             ADD 1 TO pass-count
170100          ELSE
170200             DISPLAY "COMP-2 TEST " II "," JJ " FAILED:"
170300             DISPLAY "test-value = " TEST-VALUEC2(II - 1, JJ)
170400          DISPLAY "expected-result = " EXPECTED-RESULTSC2(II - 1)
170500             DISPLAY "actual-result = " ACTUAL-RESULT-C2
170600             DISPLAY " "
170700             ADD 1 TO fail-count
170800          END-IF
170900        END-PERFORM;
171000      END-PERFORM;
171100
171200       IF fail-count NOT = ZERO AND
171300       pass-count NOT = NUM-OF-TEST * 3
171400       THEN
171500         DISPLAY "COMP-2 FAILURE";
171600         MOVE 1 TO ANY-FAILED;
171700       END-IF;
171800
171900*-----------------------------------------------------------------
172000* 11301400          COMP-3/PACKED-DECIMAL:           | |
172100*-----------------------------------------------------------------
172200     MOVE NUM-COMP-3 TO NUM-OF-TEST;
172300     MOVE 1 TO II;
172400
172500*  START OF TEST 1
172600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
172700          COMPUTE
172800               COMP-3-ACTUAL-RESULT-1 = FUNCTION
172900                  INTEGER-PART(COMP-3-TEST-VALUE-1(JJ));
173000          IF COMP-3-ACTUAL-RESULT-1 =
173100                  COMP-3-EXPECTED-RESULT-1 THEN
173200             ADD 1 TO pass-count
173300          ELSE
173400         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
173500         DISPLAY "test-value = " COMP-3-TEST-VALUE-1(JJ)
173600         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-1
173700         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-1
173800         DISPLAY " "
173900             ADD 1 TO fail-count
174000          END-IF;
174100       END-PERFORM;
174200       ADD 1 TO II;
174300*  START OF TEST 2
174400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
174500          COMPUTE
174600               COMP-3-ACTUAL-RESULT-2 = FUNCTION
174700                  INTEGER-PART(COMP-3-TEST-VALUE-2(JJ));
174800          IF COMP-3-ACTUAL-RESULT-2 =
174900                  COMP-3-EXPECTED-RESULT-2 THEN
175000             ADD 1 TO pass-count
175100          ELSE
175200         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
175300         DISPLAY "test-value = " COMP-3-TEST-VALUE-2(JJ)
175400         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-2
175500         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-2
175600         DISPLAY " "
175700             ADD 1 TO fail-count
175800          END-IF;
175900       END-PERFORM;
176000       ADD 1 TO II;
176100*  START OF TEST 3
176200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
176300          COMPUTE
176400               COMP-3-ACTUAL-RESULT-3 = FUNCTION
176500                  INTEGER-PART(COMP-3-TEST-VALUE-3(JJ));
176600          IF COMP-3-ACTUAL-RESULT-3 =
176700                  COMP-3-EXPECTED-RESULT-3 THEN
176800             ADD 1 TO pass-count
176900          ELSE
177000         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
177100         DISPLAY "test-value = " COMP-3-TEST-VALUE-3(JJ)
177200         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-3
177300         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-3
177400         DISPLAY " "
177500             ADD 1 TO fail-count
177600          END-IF;
177700       END-PERFORM;
177800       ADD 1 TO II;
177900*  START OF TEST 4
178000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
178100          COMPUTE
178200               COMP-3-ACTUAL-RESULT-4 = FUNCTION
178300                  INTEGER-PART(COMP-3-TEST-VALUE-4(JJ));
178400          IF COMP-3-ACTUAL-RESULT-4 =
178500                  COMP-3-EXPECTED-RESULT-4 THEN
178600             ADD 1 TO pass-count
178700          ELSE
178800         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
178900         DISPLAY "test-value = " COMP-3-TEST-VALUE-4(JJ)
179000         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-4
179100         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-4
179200         DISPLAY " "
179300             ADD 1 TO fail-count
179400          END-IF;
179500       END-PERFORM;
179600       ADD 1 TO II;
179700*  START OF TEST 5
179800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
179900          COMPUTE
180000               COMP-3-ACTUAL-RESULT-5 = FUNCTION
180100                  INTEGER-PART(COMP-3-TEST-VALUE-5(JJ));
180200          IF COMP-3-ACTUAL-RESULT-5 =
180300                  COMP-3-EXPECTED-RESULT-5 THEN
180400             ADD 1 TO pass-count
180500          ELSE
180600         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
180700         DISPLAY "test-value = " COMP-3-TEST-VALUE-5(JJ)
180800         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-5
180900         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-5
181000         DISPLAY " "
181100             ADD 1 TO fail-count
181200          END-IF;
181300       END-PERFORM;
181400       ADD 1 TO II;
181500*  START OF TEST 6
181600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
181700          COMPUTE
181800               COMP-3-ACTUAL-RESULT-6 = FUNCTION
181900                  INTEGER-PART(COMP-3-TEST-VALUE-6(JJ));
182000          IF COMP-3-ACTUAL-RESULT-6 =
182100                  COMP-3-EXPECTED-RESULT-6 THEN
182200             ADD 1 TO pass-count
182300          ELSE
182400         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
182500         DISPLAY "test-value = " COMP-3-TEST-VALUE-6(JJ)
182600         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-6
182700         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-6
182800         DISPLAY " "
182900             ADD 1 TO fail-count
183000          END-IF;
183100       END-PERFORM;
183200       ADD 1 TO II;
183300*  START OF TEST 7
183400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
183500          COMPUTE
183600               COMP-3-ACTUAL-RESULT-7 = FUNCTION
183700                  INTEGER-PART(COMP-3-TEST-VALUE-7(JJ));
183800          IF COMP-3-ACTUAL-RESULT-7 =
183900                  COMP-3-EXPECTED-RESULT-7 THEN
184000             ADD 1 TO pass-count
184100          ELSE
184200         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
184300         DISPLAY "test-value = " COMP-3-TEST-VALUE-7(JJ)
184400         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-7
184500         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-7
184600         DISPLAY " "
184700             ADD 1 TO fail-count
184800          END-IF;
184900       END-PERFORM;
185000       ADD 1 TO II;
185100*  START OF TEST 8
185200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
185300          COMPUTE
185400               COMP-3-ACTUAL-RESULT-8 = FUNCTION
185500                  INTEGER-PART(COMP-3-TEST-VALUE-8(JJ));
185600          IF COMP-3-ACTUAL-RESULT-8 =
185700                  COMP-3-EXPECTED-RESULT-8 THEN
185800             ADD 1 TO pass-count
185900          ELSE
186000         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
186100         DISPLAY "test-value = " COMP-3-TEST-VALUE-8(JJ)
186200         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-8
186300         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-8
186400         DISPLAY " "
186500             ADD 1 TO fail-count
186600          END-IF;
186700       END-PERFORM;
186800       ADD 1 TO II;
186900*  START OF TEST 9
187000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
187100          COMPUTE
187200               COMP-3-ACTUAL-RESULT-9 = FUNCTION
187300                  INTEGER-PART(COMP-3-TEST-VALUE-9(JJ));
187400          IF COMP-3-ACTUAL-RESULT-9 =
187500                  COMP-3-EXPECTED-RESULT-9 THEN
187600             ADD 1 TO pass-count
187700          ELSE
187800         DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
187900         DISPLAY "test-value = " COMP-3-TEST-VALUE-9(JJ)
188000         DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-9
188100         DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-9
188200         DISPLAY " "
188300             ADD 1 TO fail-count
188400          END-IF;
188500       END-PERFORM;
188600       ADD 1 TO II;
188700*  START OF TEST 10
188800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
188900          COMPUTE
189000               COMP-3-ACTUAL-RESULT-10 = FUNCTION
189100                  INTEGER-PART(COMP-3-TEST-VALUE-10(JJ));
189200          IF COMP-3-ACTUAL-RESULT-10 =
189300                  COMP-3-EXPECTED-RESULT-10 THEN
189400            ADD 1 TO pass-count
189500          ELSE
189600        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
189700        DISPLAY "test-value = " COMP-3-TEST-VALUE-10(JJ)
189800        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-10
189900        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-10
190000        DISPLAY " "
190100            ADD 1 TO fail-count
190200          END-IF;
190300       END-PERFORM;
190400       ADD 1 TO II;
190500*  START OF TEST 11
190600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
190700          COMPUTE
190800               COMP-3-ACTUAL-RESULT-11 = FUNCTION
190900                  INTEGER-PART(COMP-3-TEST-VALUE-11(JJ));
191000          IF COMP-3-ACTUAL-RESULT-11 =
191100                  COMP-3-EXPECTED-RESULT-11 THEN
191200            ADD 1 TO pass-count
191300          ELSE
191400        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
191500        DISPLAY "test-value = " COMP-3-TEST-VALUE-11(JJ)
191600        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-11
191700        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-11
191800        DISPLAY " "
191900            ADD 1 TO fail-count
192000          END-IF;
192100       END-PERFORM;
192200       ADD 1 TO II;
192300*  START OF TEST 12
192400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
192500          COMPUTE
192600               COMP-3-ACTUAL-RESULT-12 = FUNCTION
192700                  INTEGER-PART(COMP-3-TEST-VALUE-12(JJ));
192800          IF COMP-3-ACTUAL-RESULT-12 =
192900                  COMP-3-EXPECTED-RESULT-12 THEN
193000            ADD 1 TO pass-count
193100          ELSE
193200        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
193300        DISPLAY "test-value = " COMP-3-TEST-VALUE-12(JJ)
193400        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-12
193500        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-12
193600        DISPLAY " "
193700            ADD 1 TO fail-count
193800          END-IF;
193900       END-PERFORM;
194000       ADD 1 TO II;
194100*  START OF TEST 13
194200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
194300          COMPUTE
194400               COMP-3-ACTUAL-RESULT-13 = FUNCTION
194500                  INTEGER-PART(COMP-3-TEST-VALUE-13(JJ));
194600          IF COMP-3-ACTUAL-RESULT-13 =
194700                  COMP-3-EXPECTED-RESULT-13 THEN
194800            ADD 1 TO pass-count
194900          ELSE
195000        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
195100        DISPLAY "test-value = " COMP-3-TEST-VALUE-13(JJ)
195200        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-13
195300        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-13
195400        DISPLAY " "
195500            ADD 1 TO fail-count
195600          END-IF;
195700       END-PERFORM;
195800       ADD 1 TO II;
195900*  START OF TEST 14
196000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
196100          COMPUTE
196200               COMP-3-ACTUAL-RESULT-14 = FUNCTION
196300                  INTEGER-PART(COMP-3-TEST-VALUE-14(JJ));
196400          IF COMP-3-ACTUAL-RESULT-14 =
196500                  COMP-3-EXPECTED-RESULT-14 THEN
196600            ADD 1 TO pass-count
196700          ELSE
196800        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
196900        DISPLAY "test-value = " COMP-3-TEST-VALUE-14(JJ)
197000        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-14
197100        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-14
197200        DISPLAY " "
197300            ADD 1 TO fail-count
197400          END-IF;
197500       END-PERFORM;
197600       ADD 1 TO II;
197700*  START OF TEST 15
197800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
197900          COMPUTE
198000               COMP-3-ACTUAL-RESULT-15 = FUNCTION
198100                  INTEGER-PART(COMP-3-TEST-VALUE-15(JJ));
198200          IF COMP-3-ACTUAL-RESULT-15 =
198300                  COMP-3-EXPECTED-RESULT-15 THEN
198400            ADD 1 TO pass-count
198500          ELSE
198600        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
198700        DISPLAY "test-value = " COMP-3-TEST-VALUE-15(JJ)
198800        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-15
198900        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-15
199000        DISPLAY " "
199100            ADD 1 TO fail-count
199200          END-IF;
199300       END-PERFORM;
199400       ADD 1 TO II;
199500*  START OF TEST 16
199600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
199700          COMPUTE
199800               COMP-3-ACTUAL-RESULT-16 = FUNCTION
199900                  INTEGER-PART(COMP-3-TEST-VALUE-16(JJ));
200000          IF COMP-3-ACTUAL-RESULT-16 =
200100                  COMP-3-EXPECTED-RESULT-16 THEN
200200            ADD 1 TO pass-count
200300          ELSE
200400        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
200500        DISPLAY "test-value = " COMP-3-TEST-VALUE-16(JJ)
200600        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-16
200700        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-16
200800        DISPLAY " "
200900            ADD 1 TO fail-count
201000          END-IF;
201100       END-PERFORM;
201200       ADD 1 TO II;
201300*  START OF TEST 17
201400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
201500          COMPUTE
201600               COMP-3-ACTUAL-RESULT-17 = FUNCTION
201700                  INTEGER-PART(COMP-3-TEST-VALUE-17(JJ));
201800          IF COMP-3-ACTUAL-RESULT-17 =
201900                  COMP-3-EXPECTED-RESULT-17 THEN
202000            ADD 1 TO pass-count
202100          ELSE
202200        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
202300        DISPLAY "test-value = " COMP-3-TEST-VALUE-17(JJ)
202400        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-17
202500        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-17
202600        DISPLAY " "
202700            ADD 1 TO fail-count
202800          END-IF;
202900       END-PERFORM;
203000       ADD 1 TO II;
203100*  START OF TEST 18
203200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
203300          COMPUTE
203400               COMP-3-ACTUAL-RESULT-18 = FUNCTION
203500                  INTEGER-PART(COMP-3-TEST-VALUE-18(JJ));
203600          IF COMP-3-ACTUAL-RESULT-18 =
203700                  COMP-3-EXPECTED-RESULT-18 THEN
203800            ADD 1 TO pass-count
203900          ELSE
204000        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
204100        DISPLAY "test-value = " COMP-3-TEST-VALUE-18(JJ)
204200        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-18
204300        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-18
204400        DISPLAY " "
204500            ADD 1 TO fail-count
204600          END-IF;
204700       END-PERFORM;
204800       ADD 1 TO II;
204900*  START OF TEST 19
205000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
205100          COMPUTE
205200               COMP-3-ACTUAL-RESULT-19 = FUNCTION
205300                  INTEGER-PART(COMP-3-TEST-VALUE-19(JJ));
205400          IF COMP-3-ACTUAL-RESULT-19 =
205500                  COMP-3-EXPECTED-RESULT-19 THEN
205600            ADD 1 TO pass-count
205700          ELSE
205800        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
205900        DISPLAY "test-value = " COMP-3-TEST-VALUE-19(JJ)
206000        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-19
206100        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-19
206200        DISPLAY " "
206300            ADD 1 TO fail-count
206400          END-IF;
206500       END-PERFORM;
206600       ADD 1 TO II;
206700*  START OF TEST 20
206800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
206900          COMPUTE
207000               COMP-3-ACTUAL-RESULT-20 = FUNCTION
207100                  INTEGER-PART(COMP-3-TEST-VALUE-20(JJ));
207200          IF COMP-3-ACTUAL-RESULT-20 =
207300                  COMP-3-EXPECTED-RESULT-20 THEN
207400            ADD 1 TO pass-count
207500          ELSE
207600        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
207700        DISPLAY "test-value = " COMP-3-TEST-VALUE-20(JJ)
207800        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-20
207900        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-20
208000        DISPLAY " "
208100            ADD 1 TO fail-count
208200          END-IF;
208300       END-PERFORM;
208400       ADD 1 TO II;
208500*  START OF TEST 21
208600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
208700          COMPUTE
208800               COMP-3-ACTUAL-RESULT-21 = FUNCTION
208900                  INTEGER-PART(COMP-3-TEST-VALUE-21(JJ));
209000          IF COMP-3-ACTUAL-RESULT-21 =
209100                  COMP-3-EXPECTED-RESULT-21 THEN
209200            ADD 1 TO pass-count
209300          ELSE
209400        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
209500        DISPLAY "test-value = " COMP-3-TEST-VALUE-21(JJ)
209600        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-21
209700        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-21
209800        DISPLAY " "
209900            ADD 1 TO fail-count
210000          END-IF;
210100       END-PERFORM;
210200       ADD 1 TO II;
210300*  START OF TEST 22
210400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
210500          COMPUTE
210600               COMP-3-ACTUAL-RESULT-22 = FUNCTION
210700                  INTEGER-PART(COMP-3-TEST-VALUE-22(JJ));
210800          IF COMP-3-ACTUAL-RESULT-22 =
210900                  COMP-3-EXPECTED-RESULT-22 THEN
211000            ADD 1 TO pass-count
211100          ELSE
211200        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
211300        DISPLAY "test-value = " COMP-3-TEST-VALUE-22(JJ)
211400        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-22
211500        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-22
211600        DISPLAY " "
211700            ADD 1 TO fail-count
211800          END-IF;
211900       END-PERFORM;
212000       ADD 1 TO II;
212100*  START OF TEST 23
212200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
212300          COMPUTE
212400               COMP-3-ACTUAL-RESULT-23 = FUNCTION
212500                  INTEGER-PART(COMP-3-TEST-VALUE-23(JJ));
212600          IF COMP-3-ACTUAL-RESULT-23 =
212700                  COMP-3-EXPECTED-RESULT-23 THEN
212800            ADD 1 TO pass-count
212900          ELSE
213000        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
213100        DISPLAY "test-value = " COMP-3-TEST-VALUE-23(JJ)
213200        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-23
213300        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-23
213400        DISPLAY " "
213500            ADD 1 TO fail-count
213600          END-IF;
213700       END-PERFORM;
213800       ADD 1 TO II;
213900*  START OF TEST 24
214000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
214100          COMPUTE
214200               COMP-3-ACTUAL-RESULT-24 = FUNCTION
214300                  INTEGER-PART(COMP-3-TEST-VALUE-24(JJ));
214400          IF COMP-3-ACTUAL-RESULT-24 =
214500                  COMP-3-EXPECTED-RESULT-24 THEN
214600            ADD 1 TO pass-count
214700          ELSE
214800        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
214900        DISPLAY "test-value = " COMP-3-TEST-VALUE-24(JJ)
215000        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-24
215100        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-24
215200        DISPLAY " "
215300            ADD 1 TO fail-count
215400          END-IF;
215500       END-PERFORM;
215600       ADD 1 TO II;
215700*  START OF TEST 25
215800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
215900          COMPUTE
216000               COMP-3-ACTUAL-RESULT-25 = FUNCTION
216100                  INTEGER-PART(COMP-3-TEST-VALUE-25(JJ));
216200          IF COMP-3-ACTUAL-RESULT-25 =
216300                  COMP-3-EXPECTED-RESULT-25 THEN
216400            ADD 1 TO pass-count
216500          ELSE
216600        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
216700        DISPLAY "test-value = " COMP-3-TEST-VALUE-25(JJ)
216800        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-25
216900        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-25
217000        DISPLAY " "
217100            ADD 1 TO fail-count
217200          END-IF;
217300       END-PERFORM;
217400       ADD 1 TO II;
217500*  START OF TEST 26
217600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
217700          COMPUTE
217800               COMP-3-ACTUAL-RESULT-26 = FUNCTION
217900                  INTEGER-PART(COMP-3-TEST-VALUE-26(JJ));
218000          IF COMP-3-ACTUAL-RESULT-26 =
218100                  COMP-3-EXPECTED-RESULT-26 THEN
218200            ADD 1 TO pass-count
218300          ELSE
218400        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
218500        DISPLAY "test-value = " COMP-3-TEST-VALUE-26(JJ)
218600        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-26
218700        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-26
218800        DISPLAY " "
218900            ADD 1 TO fail-count
219000          END-IF;
219100       END-PERFORM;
219200       ADD 1 TO II;
219300*  START OF TEST 27
219400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
219500          COMPUTE
219600               COMP-3-ACTUAL-RESULT-27 = FUNCTION
219700                  INTEGER-PART(COMP-3-TEST-VALUE-27(JJ));
219800          IF COMP-3-ACTUAL-RESULT-27 =
219900                  COMP-3-EXPECTED-RESULT-27 THEN
220000            ADD 1 TO pass-count
220100          ELSE
220200        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
220300        DISPLAY "test-value = " COMP-3-TEST-VALUE-27(JJ)
220400        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-27
220500        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-27
220600        DISPLAY " "
220700            ADD 1 TO fail-count
220800          END-IF;
220900       END-PERFORM;
221000       ADD 1 TO II;
221100*  START OF TEST 28
221200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
221300          COMPUTE
221400               COMP-3-ACTUAL-RESULT-28 = FUNCTION
221500                  INTEGER-PART(COMP-3-TEST-VALUE-28(JJ));
221600          IF COMP-3-ACTUAL-RESULT-28 =
221700                  COMP-3-EXPECTED-RESULT-28 THEN
221800            ADD 1 TO pass-count
221900          ELSE
222000        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
222100        DISPLAY "test-value = " COMP-3-TEST-VALUE-28(JJ)
222200        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-28
222300        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-28
222400        DISPLAY " "
222500            ADD 1 TO fail-count
222600          END-IF;
222700       END-PERFORM;
222800       ADD 1 TO II;
222900*  START OF TEST 29
223000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
223100          COMPUTE
223200               COMP-3-ACTUAL-RESULT-29 = FUNCTION
223300                  INTEGER-PART(COMP-3-TEST-VALUE-29(JJ));
223400          IF COMP-3-ACTUAL-RESULT-29 =
223500                  COMP-3-EXPECTED-RESULT-29 THEN
223600            ADD 1 TO pass-count
223700          ELSE
223800        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
223900        DISPLAY "test-value = " COMP-3-TEST-VALUE-29(JJ)
224000        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-29
224100        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-29
224200        DISPLAY " "
224300            ADD 1 TO fail-count
224400          END-IF;
224500       END-PERFORM;
224600       ADD 1 TO II;
224700*  START OF TEST 30
224800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
224900          COMPUTE
225000               COMP-3-ACTUAL-RESULT-30 = FUNCTION
225100                  INTEGER-PART(COMP-3-TEST-VALUE-30(JJ));
225200          IF COMP-3-ACTUAL-RESULT-30 =
225300                  COMP-3-EXPECTED-RESULT-30 THEN
225400            ADD 1 TO pass-count
225500          ELSE
225600        DISPLAY "COMP-3 TEST " II "," JJ " FAILED:"
225700        DISPLAY "test-value = " COMP-3-TEST-VALUE-30(JJ)
225800        DISPLAY "expected-result = " COMP-3-EXPECTED-RESULT-30
225900        DISPLAY "actual-result = " COMP-3-ACTUAL-RESULT-30
226000        DISPLAY " "
226100            ADD 1 TO fail-count
226200          END-IF;
226300       END-PERFORM;
226400       ADD 1 TO II;
226500
226600       IF fail-count NOT = ZERO AND
226700       pass-count NOT = NUM-OF-TEST * 3
226800       THEN
226900         DISPLAY "COMP-3 FAILURE";
227000         MOVE 1 TO ANY-FAILED;
227100       END-IF;
227200
227300*-----------------------------------------------------------------
227400* 11301900          DISPLAY:                         | |
227500* 11301950 ÃÆÃâÃâ Ã¢â¬â¢ÃÆÃ¢â¬Â ÃÂ¢Ã¢âÂ¬Ã¢âÂ¢ÃÆÃâÃÂ¢Ã¢âÂ¬ÃÂ ÃÆÃÂ¢
227600*-----------------------------------------------------------------
227700     MOVE NUM-DISPLAY TO NUM-OF-TEST;
227800     MOVE 1 TO II;
227900
228000*  START OF TEST 1
228100        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
228200          COMPUTE
228300               DISPLAY-ACTUAL-RESULT-1 = FUNCTION
228400                  INTEGER-PART(DISPLAY-TEST-VALUE-1(JJ));
228500          IF DISPLAY-ACTUAL-RESULT-1 =
228600                  DISPLAY-EXPECTED-RESULT-1 THEN
228700             ADD 1 TO pass-count
228800          ELSE
228900         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
229000         DISPLAY "test-value = " DISPLAY-TEST-VALUE-1(JJ)
229100         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-1
229200         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-1
229300         DISPLAY " "
229400             ADD 1 TO fail-count
229500          END-IF;
229600       END-PERFORM;
229700       ADD 1 TO II;
229800*  START OF TEST 2
229900        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
230000          COMPUTE
230100               DISPLAY-ACTUAL-RESULT-2 = FUNCTION
230200                  INTEGER-PART(DISPLAY-TEST-VALUE-2(JJ));
230300          IF DISPLAY-ACTUAL-RESULT-2 =
230400                  DISPLAY-EXPECTED-RESULT-2 THEN
230500             ADD 1 TO pass-count
230600          ELSE
230700         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
230800         DISPLAY "test-value = " DISPLAY-TEST-VALUE-2(JJ)
230900         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-2
231000         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-2
231100         DISPLAY " "
231200             ADD 1 TO fail-count
231300          END-IF;
231400       END-PERFORM;
231500       ADD 1 TO II;
231600*  START OF TEST 3
231700        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
231800          COMPUTE
231900               DISPLAY-ACTUAL-RESULT-3 = FUNCTION
232000                  INTEGER-PART(DISPLAY-TEST-VALUE-3(JJ));
232100          IF DISPLAY-ACTUAL-RESULT-3 =
232200                  DISPLAY-EXPECTED-RESULT-3 THEN
232300             ADD 1 TO pass-count
232400          ELSE
232500         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
232600         DISPLAY "test-value = " DISPLAY-TEST-VALUE-3(JJ)
232700         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-3
232800         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-3
232900         DISPLAY " "
233000             ADD 1 TO fail-count
233100          END-IF;
233200       END-PERFORM;
233300       ADD 1 TO II;
233400*  START OF TEST 4
233500        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
233600          COMPUTE
233700               DISPLAY-ACTUAL-RESULT-4 = FUNCTION
233800                  INTEGER-PART(DISPLAY-TEST-VALUE-4(JJ));
233900          IF DISPLAY-ACTUAL-RESULT-4 =
234000                  DISPLAY-EXPECTED-RESULT-4 THEN
234100             ADD 1 TO pass-count
234200          ELSE
234300         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
234400         DISPLAY "test-value = " DISPLAY-TEST-VALUE-4(JJ)
234500         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-4
234600         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-4
234700         DISPLAY " "
234800             ADD 1 TO fail-count
234900          END-IF;
235000       END-PERFORM;
235100       ADD 1 TO II;
235200*  START OF TEST 5
235300        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
235400          COMPUTE
235500               DISPLAY-ACTUAL-RESULT-5 = FUNCTION
235600                  INTEGER-PART(DISPLAY-TEST-VALUE-5(JJ));
235700          IF DISPLAY-ACTUAL-RESULT-5 =
235800                  DISPLAY-EXPECTED-RESULT-5 THEN
235900             ADD 1 TO pass-count
236000          ELSE
236100         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
236200         DISPLAY "test-value = " DISPLAY-TEST-VALUE-5(JJ)
236300         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-5
236400         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-5
236500         DISPLAY " "
236600             ADD 1 TO fail-count
236700          END-IF;
236800       END-PERFORM;
236900       ADD 1 TO II;
237000*  START OF TEST 6
237100        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
237200          COMPUTE
237300               DISPLAY-ACTUAL-RESULT-6 = FUNCTION
237400                  INTEGER-PART(DISPLAY-TEST-VALUE-6(JJ));
237500          IF DISPLAY-ACTUAL-RESULT-6 =
237600                  DISPLAY-EXPECTED-RESULT-6 THEN
237700             ADD 1 TO pass-count
237800          ELSE
237900         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
238000         DISPLAY "test-value = " DISPLAY-TEST-VALUE-6(JJ)
238100         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-6
238200         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-6
238300         DISPLAY " "
238400             ADD 1 TO fail-count
238500          END-IF;
238600       END-PERFORM;
238700       ADD 1 TO II;
238800*  START OF TEST 7
238900        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
239000          COMPUTE
239100               DISPLAY-ACTUAL-RESULT-7 = FUNCTION
239200                  INTEGER-PART(DISPLAY-TEST-VALUE-7(JJ));
239300          IF DISPLAY-ACTUAL-RESULT-7 =
239400                  DISPLAY-EXPECTED-RESULT-7 THEN
239500             ADD 1 TO pass-count
239600          ELSE
239700         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
239800         DISPLAY "test-value = " DISPLAY-TEST-VALUE-7(JJ)
239900         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-7
240000         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-7
240100         DISPLAY " "
240200             ADD 1 TO fail-count
240300          END-IF;
240400       END-PERFORM;
240500       ADD 1 TO II;
240600*  START OF TEST 8
240700        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
240800          COMPUTE
240900               DISPLAY-ACTUAL-RESULT-8 = FUNCTION
241000                  INTEGER-PART(DISPLAY-TEST-VALUE-8(JJ));
241100          IF DISPLAY-ACTUAL-RESULT-8 =
241200                  DISPLAY-EXPECTED-RESULT-8 THEN
241300             ADD 1 TO pass-count
241400          ELSE
241500         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
241600         DISPLAY "test-value = " DISPLAY-TEST-VALUE-8(JJ)
241700         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-8
241800         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-8
241900         DISPLAY " "
242000             ADD 1 TO fail-count
242100          END-IF;
242200       END-PERFORM;
242300       ADD 1 TO II;
242400*  START OF TEST 9
242500        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
242600          COMPUTE
242700               DISPLAY-ACTUAL-RESULT-9 = FUNCTION
242800                  INTEGER-PART(DISPLAY-TEST-VALUE-9(JJ));
242900          IF DISPLAY-ACTUAL-RESULT-9 =
243000                  DISPLAY-EXPECTED-RESULT-9 THEN
243100             ADD 1 TO pass-count
243200          ELSE
243300         DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
243400         DISPLAY "test-value = " DISPLAY-TEST-VALUE-9(JJ)
243500         DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-9
243600         DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-9
243700         DISPLAY " "
243800             ADD 1 TO fail-count
243900          END-IF;
244000       END-PERFORM;
244100       ADD 1 TO II;
244200*  START OF TEST 10
244300        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
244400          COMPUTE
244500               DISPLAY-ACTUAL-RESULT-10 = FUNCTION
244600                  INTEGER-PART(DISPLAY-TEST-VALUE-10(JJ));
244700          IF DISPLAY-ACTUAL-RESULT-10 =
244800                  DISPLAY-EXPECTED-RESULT-10 THEN
244900            ADD 1 TO pass-count
245000          ELSE
245100        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
245200        DISPLAY "test-value = " DISPLAY-TEST-VALUE-10(JJ)
245300        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-10
245400        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-10
245500        DISPLAY " "
245600            ADD 1 TO fail-count
245700          END-IF;
245800       END-PERFORM;
245900       ADD 1 TO II;
246000*  START OF TEST 11
246100        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
246200          COMPUTE
246300               DISPLAY-ACTUAL-RESULT-11 = FUNCTION
246400                  INTEGER-PART(DISPLAY-TEST-VALUE-11(JJ));
246500          IF DISPLAY-ACTUAL-RESULT-11 =
246600                  DISPLAY-EXPECTED-RESULT-11 THEN
246700            ADD 1 TO pass-count
246800          ELSE
246900        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
247000        DISPLAY "test-value = " DISPLAY-TEST-VALUE-11(JJ)
247100        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-11
247200        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-11
247300        DISPLAY " "
247400            ADD 1 TO fail-count
247500          END-IF;
247600       END-PERFORM;
247700       ADD 1 TO II;
247800*  START OF TEST 12
247900        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
248000          COMPUTE
248100               DISPLAY-ACTUAL-RESULT-12 = FUNCTION
248200                  INTEGER-PART(DISPLAY-TEST-VALUE-12(JJ));
248300          IF DISPLAY-ACTUAL-RESULT-12 =
248400                  DISPLAY-EXPECTED-RESULT-12 THEN
248500            ADD 1 TO pass-count
248600          ELSE
248700        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
248800        DISPLAY "test-value = " DISPLAY-TEST-VALUE-12(JJ)
248900        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-12
249000        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-12
249100        DISPLAY " "
249200            ADD 1 TO fail-count
249300          END-IF;
249400       END-PERFORM;
249500       ADD 1 TO II;
249600*  START OF TEST 13
249700        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
249800          COMPUTE
249900               DISPLAY-ACTUAL-RESULT-13 = FUNCTION
250000                  INTEGER-PART(DISPLAY-TEST-VALUE-13(JJ));
250100          IF DISPLAY-ACTUAL-RESULT-13 =
250200                  DISPLAY-EXPECTED-RESULT-13 THEN
250300            ADD 1 TO pass-count
250400          ELSE
250500        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
250600        DISPLAY "test-value = " DISPLAY-TEST-VALUE-13(JJ)
250700        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-13
250800        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-13
250900        DISPLAY " "
251000            ADD 1 TO fail-count
251100          END-IF;
251200       END-PERFORM;
251300       ADD 1 TO II;
251400*  START OF TEST 14
251500        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
251600          COMPUTE
251700               DISPLAY-ACTUAL-RESULT-14 = FUNCTION
251800                  INTEGER-PART(DISPLAY-TEST-VALUE-14(JJ));
251900          IF DISPLAY-ACTUAL-RESULT-14 =
252000                  DISPLAY-EXPECTED-RESULT-14 THEN
252100            ADD 1 TO pass-count
252200          ELSE
252300        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
252400        DISPLAY "test-value = " DISPLAY-TEST-VALUE-14(JJ)
252500        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-14
252600        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-14
252700        DISPLAY " "
252800            ADD 1 TO fail-count
252900          END-IF;
253000       END-PERFORM;
253100       ADD 1 TO II;
253200*  START OF TEST 15
253300        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
253400          COMPUTE
253500               DISPLAY-ACTUAL-RESULT-15 = FUNCTION
253600                  INTEGER-PART(DISPLAY-TEST-VALUE-15(JJ));
253700          IF DISPLAY-ACTUAL-RESULT-15 =
253800                  DISPLAY-EXPECTED-RESULT-15 THEN
253900            ADD 1 TO pass-count
254000          ELSE
254100        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
254200        DISPLAY "test-value = " DISPLAY-TEST-VALUE-15(JJ)
254300        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-15
254400        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-15
254500        DISPLAY " "
254600            ADD 1 TO fail-count
254700          END-IF;
254800       END-PERFORM;
254900       ADD 1 TO II;
255000*  START OF TEST 16
255100        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
255200          COMPUTE
255300               DISPLAY-ACTUAL-RESULT-16 = FUNCTION
255400                  INTEGER-PART(DISPLAY-TEST-VALUE-16(JJ));
255500          IF DISPLAY-ACTUAL-RESULT-16 =
255600                  DISPLAY-EXPECTED-RESULT-16 THEN
255700            ADD 1 TO pass-count
255800          ELSE
255900        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
256000        DISPLAY "test-value = " DISPLAY-TEST-VALUE-16(JJ)
256100        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-16
256200        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-16
256300        DISPLAY " "
256400            ADD 1 TO fail-count
256500          END-IF;
256600       END-PERFORM;
256700       ADD 1 TO II;
256800*  START OF TEST 17
256900        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
257000          COMPUTE
257100               DISPLAY-ACTUAL-RESULT-17 = FUNCTION
257200                  INTEGER-PART(DISPLAY-TEST-VALUE-17(JJ));
257300          IF DISPLAY-ACTUAL-RESULT-17 =
257400                  DISPLAY-EXPECTED-RESULT-17 THEN
257500            ADD 1 TO pass-count
257600          ELSE
257700        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
257800        DISPLAY "test-value = " DISPLAY-TEST-VALUE-17(JJ)
257900        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-17
258000        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-17
258100        DISPLAY " "
258200            ADD 1 TO fail-count
258300          END-IF;
258400       END-PERFORM;
258500       ADD 1 TO II;
258600*  START OF TEST 18
258700        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
258800          COMPUTE
258900               DISPLAY-ACTUAL-RESULT-18 = FUNCTION
259000                  INTEGER-PART(DISPLAY-TEST-VALUE-18(JJ));
259100          IF DISPLAY-ACTUAL-RESULT-18 =
259200                  DISPLAY-EXPECTED-RESULT-18 THEN
259300            ADD 1 TO pass-count
259400          ELSE
259500        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
259600        DISPLAY "test-value = " DISPLAY-TEST-VALUE-18(JJ)
259700        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-18
259800        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-18
259900        DISPLAY " "
260000            ADD 1 TO fail-count
260100          END-IF;
260200       END-PERFORM;
260300       ADD 1 TO II;
260400*  START OF TEST 19
260500        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
260600          COMPUTE
260700               DISPLAY-ACTUAL-RESULT-19 = FUNCTION
260800                  INTEGER-PART(DISPLAY-TEST-VALUE-19(JJ));
260900          IF DISPLAY-ACTUAL-RESULT-19 =
261000                  DISPLAY-EXPECTED-RESULT-19 THEN
261100            ADD 1 TO pass-count
261200          ELSE
261300        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
261400        DISPLAY "test-value = " DISPLAY-TEST-VALUE-19(JJ)
261500        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-19
261600        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-19
261700        DISPLAY " "
261800            ADD 1 TO fail-count
261900          END-IF;
262000       END-PERFORM;
262100       ADD 1 TO II;
262200*  START OF TEST 20
262300        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
262400          COMPUTE
262500               DISPLAY-ACTUAL-RESULT-20 = FUNCTION
262600                  INTEGER-PART(DISPLAY-TEST-VALUE-20(JJ));
262700          IF DISPLAY-ACTUAL-RESULT-20 =
262800                  DISPLAY-EXPECTED-RESULT-20 THEN
262900            ADD 1 TO pass-count
263000          ELSE
263100        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
263200        DISPLAY "test-value = " DISPLAY-TEST-VALUE-20(JJ)
263300        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-20
263400        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-20
263500        DISPLAY " "
263600            ADD 1 TO fail-count
263700          END-IF;
263800       END-PERFORM;
263900       ADD 1 TO II;
264000*  START OF TEST 21
264100        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
264200          COMPUTE
264300               DISPLAY-ACTUAL-RESULT-21 = FUNCTION
264400                  INTEGER-PART(DISPLAY-TEST-VALUE-21(JJ));
264500          IF DISPLAY-ACTUAL-RESULT-21 =
264600                  DISPLAY-EXPECTED-RESULT-21 THEN
264700            ADD 1 TO pass-count
264800          ELSE
264900        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
265000        DISPLAY "test-value = " DISPLAY-TEST-VALUE-21(JJ)
265100        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-21
265200        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-21
265300        DISPLAY " "
265400            ADD 1 TO fail-count
265500          END-IF;
265600       END-PERFORM;
265700       ADD 1 TO II;
265800*  START OF TEST 22
265900        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
266000          COMPUTE
266100               DISPLAY-ACTUAL-RESULT-22 = FUNCTION
266200                  INTEGER-PART(DISPLAY-TEST-VALUE-22(JJ));
266300          IF DISPLAY-ACTUAL-RESULT-22 =
266400                  DISPLAY-EXPECTED-RESULT-22 THEN
266500            ADD 1 TO pass-count
266600          ELSE
266700        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
266800        DISPLAY "test-value = " DISPLAY-TEST-VALUE-22(JJ)
266900        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-22
267000        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-22
267100        DISPLAY " "
267200            ADD 1 TO fail-count
267300          END-IF;
267400       END-PERFORM;
267500       ADD 1 TO II;
267600*  START OF TEST 23
267700        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
267800          COMPUTE
267900               DISPLAY-ACTUAL-RESULT-23 = FUNCTION
268000                  INTEGER-PART(DISPLAY-TEST-VALUE-23(JJ));
268100          IF DISPLAY-ACTUAL-RESULT-23 =
268200                  DISPLAY-EXPECTED-RESULT-23 THEN
268300            ADD 1 TO pass-count
268400          ELSE
268500        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
268600        DISPLAY "test-value = " DISPLAY-TEST-VALUE-23(JJ)
268700        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-23
268800        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-23
268900        DISPLAY " "
269000            ADD 1 TO fail-count
269100          END-IF;
269200       END-PERFORM;
269300       ADD 1 TO II;
269400*  START OF TEST 24
269500        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
269600          COMPUTE
269700               DISPLAY-ACTUAL-RESULT-24 = FUNCTION
269800                  INTEGER-PART(DISPLAY-TEST-VALUE-24(JJ));
269900          IF DISPLAY-ACTUAL-RESULT-24 =
270000                  DISPLAY-EXPECTED-RESULT-24 THEN
270100            ADD 1 TO pass-count
270200          ELSE
270300        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
270400        DISPLAY "test-value = " DISPLAY-TEST-VALUE-24(JJ)
270500        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-24
270600        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-24
270700        DISPLAY " "
270800            ADD 1 TO fail-count
270900          END-IF;
271000       END-PERFORM;
271100       ADD 1 TO II;
271200*  START OF TEST 25
271300        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
271400          COMPUTE
271500               DISPLAY-ACTUAL-RESULT-25 = FUNCTION
271600                  INTEGER-PART(DISPLAY-TEST-VALUE-25(JJ));
271700          IF DISPLAY-ACTUAL-RESULT-25 =
271800                  DISPLAY-EXPECTED-RESULT-25 THEN
271900            ADD 1 TO pass-count
272000          ELSE
272100        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
272200        DISPLAY "test-value = " DISPLAY-TEST-VALUE-25(JJ)
272300        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-25
272400        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-25
272500        DISPLAY " "
272600            ADD 1 TO fail-count
272700          END-IF;
272800       END-PERFORM;
272900       ADD 1 TO II;
273000*  START OF TEST 26
273100        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
273200          COMPUTE
273300               DISPLAY-ACTUAL-RESULT-26 = FUNCTION
273400                  INTEGER-PART(DISPLAY-TEST-VALUE-26(JJ));
273500          IF DISPLAY-ACTUAL-RESULT-26 =
273600                  DISPLAY-EXPECTED-RESULT-26 THEN
273700            ADD 1 TO pass-count
273800          ELSE
273900        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
274000        DISPLAY "test-value = " DISPLAY-TEST-VALUE-26(JJ)
274100        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-26
274200        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-26
274300        DISPLAY " "
274400            ADD 1 TO fail-count
274500          END-IF;
274600       END-PERFORM;
274700       ADD 1 TO II;
274800*  START OF TEST 27
274900        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
275000          COMPUTE
275100               DISPLAY-ACTUAL-RESULT-27 = FUNCTION
275200                  INTEGER-PART(DISPLAY-TEST-VALUE-27(JJ));
275300          IF DISPLAY-ACTUAL-RESULT-27 =
275400                  DISPLAY-EXPECTED-RESULT-27 THEN
275500            ADD 1 TO pass-count
275600          ELSE
275700        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
275800        DISPLAY "test-value = " DISPLAY-TEST-VALUE-27(JJ)
275900        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-27
276000        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-27
276100        DISPLAY " "
276200            ADD 1 TO fail-count
276300          END-IF;
276400       END-PERFORM;
276500       ADD 1 TO II;
276600*  START OF TEST 28
276700        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
276800          COMPUTE
276900               DISPLAY-ACTUAL-RESULT-28 = FUNCTION
277000                  INTEGER-PART(DISPLAY-TEST-VALUE-28(JJ));
277100          IF DISPLAY-ACTUAL-RESULT-28 =
277200                  DISPLAY-EXPECTED-RESULT-28 THEN
277300            ADD 1 TO pass-count
277400          ELSE
277500        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
277600        DISPLAY "test-value = " DISPLAY-TEST-VALUE-28(JJ)
277700        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-28
277800        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-28
277900        DISPLAY " "
278000            ADD 1 TO fail-count
278100          END-IF;
278200       END-PERFORM;
278300       ADD 1 TO II;
278400*  START OF TEST 29
278500        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
278600          COMPUTE
278700               DISPLAY-ACTUAL-RESULT-29 = FUNCTION
278800                  INTEGER-PART(DISPLAY-TEST-VALUE-29(JJ));
278900          IF DISPLAY-ACTUAL-RESULT-29 =
279000                  DISPLAY-EXPECTED-RESULT-29 THEN
279100            ADD 1 TO pass-count
279200          ELSE
279300        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
279400        DISPLAY "test-value = " DISPLAY-TEST-VALUE-29(JJ)
279500        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-29
279600        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-29
279700        DISPLAY " "
279800            ADD 1 TO fail-count
279900          END-IF;
280000       END-PERFORM;
280100       ADD 1 TO II;
280200*  START OF TEST 30
280300        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
280400          COMPUTE
280500               DISPLAY-ACTUAL-RESULT-30 = FUNCTION
280600                  INTEGER-PART(DISPLAY-TEST-VALUE-30(JJ));
280700          IF DISPLAY-ACTUAL-RESULT-30 =
280800                  DISPLAY-EXPECTED-RESULT-30 THEN
280900            ADD 1 TO pass-count
281000          ELSE
281100        DISPLAY "DISPLAY TEST " II "," JJ " FAILED:"
281200        DISPLAY "test-value = " DISPLAY-TEST-VALUE-30(JJ)
281300        DISPLAY "expected-result = " DISPLAY-EXPECTED-RESULT-30
281400        DISPLAY "actual-result = " DISPLAY-ACTUAL-RESULT-30
281500        DISPLAY " "
281600            ADD 1 TO fail-count
281700          END-IF;
281800       END-PERFORM;
281900       ADD 1 TO II;
282000
282100       IF fail-count NOT = ZERO AND
282200       pass-count NOT = NUM-OF-TEST * 3
282300       THEN
282400         DISPLAY "DISPLAY FAILURE";
282500         MOVE 1 TO ANY-FAILED;
282600       END-IF;
282700* END OF DISPLAY RUN
282800
282900*-----------------------------------------------------------------
283000* 11301110            Halfword (1-4 digits)          | |
283100*-----------------------------------------------------------------
283200     MOVE NUM-HALFWD TO NUM-OF-TEST;
283300     MOVE 1 TO II;
283400
283500*  START OF TEST 1
283600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
283700          COMPUTE
283800               HALFWD-ACTUAL-RESULT-1 = FUNCTION
283900                  INTEGER-PART(HALFWD-TEST-VALUE-1(JJ));
284000          IF HALFWD-ACTUAL-RESULT-1 =
284100                  HALFWD-EXPECTED-RESULT-1 THEN
284200             ADD 1 TO pass-count
284300          ELSE
284400         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
284500         DISPLAY "test-value = " HALFWD-TEST-VALUE-1(JJ)
284600         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-1
284700         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-1
284800         DISPLAY " "
284900             ADD 1 TO fail-count
285000          END-IF;
285100       END-PERFORM;
285200       ADD 1 TO II;
285300*  START OF TEST 2
285400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
285500          COMPUTE
285600               HALFWD-ACTUAL-RESULT-2 = FUNCTION
285700                  INTEGER-PART(HALFWD-TEST-VALUE-2(JJ));
285800          IF HALFWD-ACTUAL-RESULT-2 =
285900                  HALFWD-EXPECTED-RESULT-2 THEN
286000             ADD 1 TO pass-count
286100          ELSE
286200         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
286300         DISPLAY "test-value = " HALFWD-TEST-VALUE-2(JJ)
286400         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-2
286500         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-2
286600         DISPLAY " "
286700             ADD 1 TO fail-count
286800          END-IF;
286900       END-PERFORM;
287000       ADD 1 TO II;
287100*  START OF TEST 3
287200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
287300          COMPUTE
287400               HALFWD-ACTUAL-RESULT-3 = FUNCTION
287500                  INTEGER-PART(HALFWD-TEST-VALUE-3(JJ));
287600          IF HALFWD-ACTUAL-RESULT-3 =
287700                  HALFWD-EXPECTED-RESULT-3 THEN
287800             ADD 1 TO pass-count
287900          ELSE
288000         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
288100         DISPLAY "test-value = " HALFWD-TEST-VALUE-3(JJ)
288200         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-3
288300         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-3
288400         DISPLAY " "
288500             ADD 1 TO fail-count
288600          END-IF;
288700       END-PERFORM;
288800       ADD 1 TO II;
288900*  START OF TEST 4
289000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
289100          COMPUTE
289200               HALFWD-ACTUAL-RESULT-4 = FUNCTION
289300                  INTEGER-PART(HALFWD-TEST-VALUE-4(JJ));
289400          IF HALFWD-ACTUAL-RESULT-4 =
289500                  HALFWD-EXPECTED-RESULT-4 THEN
289600             ADD 1 TO pass-count
289700          ELSE
289800         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
289900         DISPLAY "test-value = " HALFWD-TEST-VALUE-4(JJ)
290000         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-4
290100         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-4
290200         DISPLAY " "
290300             ADD 1 TO fail-count
290400          END-IF;
290500       END-PERFORM;
290600       ADD 1 TO II;
290700*  START OF TEST 5
290800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
290900          COMPUTE
291000               HALFWD-ACTUAL-RESULT-5 = FUNCTION
291100                  INTEGER-PART(HALFWD-TEST-VALUE-5(JJ));
291200          IF HALFWD-ACTUAL-RESULT-5 =
291300                  HALFWD-EXPECTED-RESULT-5 THEN
291400             ADD 1 TO pass-count
291500          ELSE
291600         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
291700         DISPLAY "test-value = " HALFWD-TEST-VALUE-5(JJ)
291800         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-5
291900         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-5
292000         DISPLAY " "
292100             ADD 1 TO fail-count
292200          END-IF;
292300       END-PERFORM;
292400       ADD 1 TO II;
292500*  START OF TEST 6
292600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
292700          COMPUTE
292800               HALFWD-ACTUAL-RESULT-6 = FUNCTION
292900                  INTEGER-PART(HALFWD-TEST-VALUE-6(JJ));
293000          IF HALFWD-ACTUAL-RESULT-6 =
293100                  HALFWD-EXPECTED-RESULT-6 THEN
293200             ADD 1 TO pass-count
293300          ELSE
293400         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
293500         DISPLAY "test-value = " HALFWD-TEST-VALUE-6(JJ)
293600         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-6
293700         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-6
293800         DISPLAY " "
293900             ADD 1 TO fail-count
294000          END-IF;
294100       END-PERFORM;
294200       ADD 1 TO II;
294300*  START OF TEST 7
294400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
294500          COMPUTE
294600               HALFWD-ACTUAL-RESULT-7 = FUNCTION
294700                  INTEGER-PART(HALFWD-TEST-VALUE-7(JJ));
294800          IF HALFWD-ACTUAL-RESULT-7 =
294900                  HALFWD-EXPECTED-RESULT-7 THEN
295000             ADD 1 TO pass-count
295100          ELSE
295200         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
295300         DISPLAY "test-value = " HALFWD-TEST-VALUE-7(JJ)
295400         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-7
295500         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-7
295600         DISPLAY " "
295700             ADD 1 TO fail-count
295800          END-IF;
295900       END-PERFORM;
296000       ADD 1 TO II;
296100*  START OF TEST 8
296200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
296300          COMPUTE
296400               HALFWD-ACTUAL-RESULT-8 = FUNCTION
296500                  INTEGER-PART(HALFWD-TEST-VALUE-8(JJ));
296600          IF HALFWD-ACTUAL-RESULT-8 =
296700                  HALFWD-EXPECTED-RESULT-8 THEN
296800             ADD 1 TO pass-count
296900          ELSE
297000         DISPLAY "HALFWORD TEST " II "," JJ " FAILED:"
297100         DISPLAY "test-value = " HALFWD-TEST-VALUE-8(JJ)
297200         DISPLAY "expected-result = " HALFWD-EXPECTED-RESULT-8
297300         DISPLAY "actual-result = " HALFWD-ACTUAL-RESULT-8
297400         DISPLAY " "
297500             ADD 1 TO fail-count
297600          END-IF;
297700       END-PERFORM;
297800       ADD 1 TO II;
297900
298000       IF fail-count NOT = ZERO AND
298100       pass-count NOT = NUM-OF-TEST * 3
298200       THEN
298300         DISPLAY "HALFWORD FAILURE";
298400         MOVE 1 TO ANY-FAILED;
298500       END-IF;
298600* END OF HALFWORD RUN
298700
298800*-----------------------------------------------------------------
298900* 11301120            Fullword (5-8 digits)          | |
299000*-----------------------------------------------------------------
299100*
299200     MOVE NUM-FULLWD TO NUM-OF-TEST;
299300     MOVE 1 TO II;
299400
299500*  START OF TEST 1
299600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
299700          COMPUTE
299800               FULLWD-ACTUAL-RESULT-1 = FUNCTION
299900                  INTEGER-PART(FULLWD-TEST-VALUE-1(JJ));
300000          IF FULLWD-ACTUAL-RESULT-1 =
300100                  FULLWD-EXPECTED-RESULT-1 THEN
300200             ADD 1 TO pass-count
300300          ELSE
300400         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
300500         DISPLAY "test-value = " FULLWD-TEST-VALUE-1(JJ)
300600         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-1
300700         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-1
300800         DISPLAY " "
300900             ADD 1 TO fail-count
301000          END-IF;
301100       END-PERFORM;
301200       ADD 1 TO II;
301300*  START OF TEST 2
301400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
301500          COMPUTE
301600               FULLWD-ACTUAL-RESULT-2 = FUNCTION
301700                  INTEGER-PART(FULLWD-TEST-VALUE-2(JJ));
301800          IF FULLWD-ACTUAL-RESULT-2 =
301900                  FULLWD-EXPECTED-RESULT-2 THEN
302000             ADD 1 TO pass-count
302100          ELSE
302200         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
302300         DISPLAY "test-value = " FULLWD-TEST-VALUE-2(JJ)
302400         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-2
302500         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-2
302600         DISPLAY " "
302700             ADD 1 TO fail-count
302800          END-IF;
302900       END-PERFORM;
303000       ADD 1 TO II;
303100*  START OF TEST 3
303200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
303300          COMPUTE
303400               FULLWD-ACTUAL-RESULT-3 = FUNCTION
303500                  INTEGER-PART(FULLWD-TEST-VALUE-3(JJ));
303600          IF FULLWD-ACTUAL-RESULT-3 =
303700                  FULLWD-EXPECTED-RESULT-3 THEN
303800             ADD 1 TO pass-count
303900          ELSE
304000         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
304100         DISPLAY "test-value = " FULLWD-TEST-VALUE-3(JJ)
304200         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-3
304300         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-3
304400         DISPLAY " "
304500             ADD 1 TO fail-count
304600          END-IF;
304700       END-PERFORM;
304800       ADD 1 TO II;
304900*  START OF TEST 4
305000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
305100          COMPUTE
305200               FULLWD-ACTUAL-RESULT-4 = FUNCTION
305300                  INTEGER-PART(FULLWD-TEST-VALUE-4(JJ));
305400          IF FULLWD-ACTUAL-RESULT-4 =
305500                  FULLWD-EXPECTED-RESULT-4 THEN
305600             ADD 1 TO pass-count
305700          ELSE
305800         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
305900         DISPLAY "test-value = " FULLWD-TEST-VALUE-4(JJ)
306000         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-4
306100         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-4
306200         DISPLAY " "
306300             ADD 1 TO fail-count
306400          END-IF;
306500       END-PERFORM;
306600       ADD 1 TO II;
306700*  START OF TEST 5
306800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
306900          COMPUTE
307000               FULLWD-ACTUAL-RESULT-5 = FUNCTION
307100                  INTEGER-PART(FULLWD-TEST-VALUE-5(JJ));
307200          IF FULLWD-ACTUAL-RESULT-5 =
307300                  FULLWD-EXPECTED-RESULT-5 THEN
307400             ADD 1 TO pass-count
307500          ELSE
307600         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
307700         DISPLAY "test-value = " FULLWD-TEST-VALUE-5(JJ)
307800         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-5
307900         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-5
308000         DISPLAY " "
308100             ADD 1 TO fail-count
308200          END-IF;
308300       END-PERFORM;
308400       ADD 1 TO II;
308500*  START OF TEST 6
308600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
308700          COMPUTE
308800               FULLWD-ACTUAL-RESULT-6 = FUNCTION
308900                  INTEGER-PART(FULLWD-TEST-VALUE-6(JJ));
309000          IF FULLWD-ACTUAL-RESULT-6 =
309100                  FULLWD-EXPECTED-RESULT-6 THEN
309200             ADD 1 TO pass-count
309300          ELSE
309400         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
309500         DISPLAY "test-value = " FULLWD-TEST-VALUE-6(JJ)
309600         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-6
309700         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-6
309800         DISPLAY " "
309900             ADD 1 TO fail-count
310000          END-IF;
310100       END-PERFORM;
310200       ADD 1 TO II;
310300*  START OF TEST 7
310400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
310500          COMPUTE
310600               FULLWD-ACTUAL-RESULT-7 = FUNCTION
310700                  INTEGER-PART(FULLWD-TEST-VALUE-7(JJ));
310800          IF FULLWD-ACTUAL-RESULT-7 =
310900                  FULLWD-EXPECTED-RESULT-7 THEN
311000             ADD 1 TO pass-count
311100          ELSE
311200         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
311300         DISPLAY "test-value = " FULLWD-TEST-VALUE-7(JJ)
311400         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-7
311500         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-7
311600         DISPLAY " "
311700             ADD 1 TO fail-count
311800          END-IF;
311900       END-PERFORM;
312000       ADD 1 TO II;
312100*  START OF TEST 8
312200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
312300          COMPUTE
312400               FULLWD-ACTUAL-RESULT-8 = FUNCTION
312500                  INTEGER-PART(FULLWD-TEST-VALUE-8(JJ));
312600          IF FULLWD-ACTUAL-RESULT-8 =
312700                  FULLWD-EXPECTED-RESULT-8 THEN
312800             ADD 1 TO pass-count
312900          ELSE
313000         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
313100         DISPLAY "test-value = " FULLWD-TEST-VALUE-8(JJ)
313200         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-8
313300         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-8
313400         DISPLAY " "
313500             ADD 1 TO fail-count
313600          END-IF;
313700       END-PERFORM;
313800       ADD 1 TO II;
313900*  START OF TEST 9
314000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
314100          COMPUTE
314200               FULLWD-ACTUAL-RESULT-9 = FUNCTION
314300                  INTEGER-PART(FULLWD-TEST-VALUE-9(JJ));
314400          IF FULLWD-ACTUAL-RESULT-9 =
314500                  FULLWD-EXPECTED-RESULT-9 THEN
314600             ADD 1 TO pass-count
314700          ELSE
314800         DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
314900         DISPLAY "test-value = " FULLWD-TEST-VALUE-9(JJ)
315000         DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-9
315100         DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-9
315200         DISPLAY " "
315300             ADD 1 TO fail-count
315400          END-IF;
315500       END-PERFORM;
315600       ADD 1 TO II;
315700*  START OF TEST 10
315800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
315900          COMPUTE
316000               FULLWD-ACTUAL-RESULT-10 = FUNCTION
316100                  INTEGER-PART(FULLWD-TEST-VALUE-10(JJ));
316200          IF FULLWD-ACTUAL-RESULT-10 =
316300                  FULLWD-EXPECTED-RESULT-10 THEN
316400            ADD 1 TO pass-count
316500          ELSE
316600        DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
316700        DISPLAY "test-value = " FULLWD-TEST-VALUE-10(JJ)
316800        DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-10
316900        DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-10
317000        DISPLAY " "
317100            ADD 1 TO fail-count
317200          END-IF;
317300       END-PERFORM;
317400       ADD 1 TO II;
317500*  START OF TEST 11
317600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
317700          COMPUTE
317800               FULLWD-ACTUAL-RESULT-11 = FUNCTION
317900                  INTEGER-PART(FULLWD-TEST-VALUE-11(JJ));
318000          IF FULLWD-ACTUAL-RESULT-11 =
318100                  FULLWD-EXPECTED-RESULT-11 THEN
318200            ADD 1 TO pass-count
318300          ELSE
318400        DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
318500        DISPLAY "test-value = " FULLWD-TEST-VALUE-11(JJ)
318600        DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-11
318700        DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-11
318800        DISPLAY " "
318900            ADD 1 TO fail-count
319000          END-IF;
319100       END-PERFORM;
319200       ADD 1 TO II;
319300*  START OF TEST 12
319400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
319500          COMPUTE
319600               FULLWD-ACTUAL-RESULT-12 = FUNCTION
319700                  INTEGER-PART(FULLWD-TEST-VALUE-12(JJ));
319800          IF FULLWD-ACTUAL-RESULT-12 =
319900                  FULLWD-EXPECTED-RESULT-12 THEN
320000            ADD 1 TO pass-count
320100          ELSE
320200        DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
320300        DISPLAY "test-value = " FULLWD-TEST-VALUE-12(JJ)
320400        DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-12
320500        DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-12
320600        DISPLAY " "
320700            ADD 1 TO fail-count
320800          END-IF;
320900       END-PERFORM;
321000       ADD 1 TO II;
321100*  START OF TEST 13
321200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
321300          COMPUTE
321400               FULLWD-ACTUAL-RESULT-13 = FUNCTION
321500                  INTEGER-PART(FULLWD-TEST-VALUE-13(JJ));
321600          IF FULLWD-ACTUAL-RESULT-13 =
321700                  FULLWD-EXPECTED-RESULT-13 THEN
321800            ADD 1 TO pass-count
321900          ELSE
322000        DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
322100        DISPLAY "test-value = " FULLWD-TEST-VALUE-13(JJ)
322200        DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-13
322300        DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-13
322400        DISPLAY " "
322500            ADD 1 TO fail-count
322600          END-IF;
322700       END-PERFORM;
322800       ADD 1 TO II;
322900*  START OF TEST 14
323000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
323100          COMPUTE
323200               FULLWD-ACTUAL-RESULT-14 = FUNCTION
323300                  INTEGER-PART(FULLWD-TEST-VALUE-14(JJ));
323400          IF FULLWD-ACTUAL-RESULT-14 =
323500                  FULLWD-EXPECTED-RESULT-14 THEN
323600            ADD 1 TO pass-count
323700          ELSE
323800        DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
323900        DISPLAY "test-value = " FULLWD-TEST-VALUE-14(JJ)
324000        DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-14
324100        DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-14
324200        DISPLAY " "
324300            ADD 1 TO fail-count
324400          END-IF;
324500       END-PERFORM;
324600       ADD 1 TO II;
324700*  START OF TEST 15
324800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
324900          COMPUTE
325000               FULLWD-ACTUAL-RESULT-15 = FUNCTION
325100                  INTEGER-PART(FULLWD-TEST-VALUE-15(JJ));
325200          IF FULLWD-ACTUAL-RESULT-15 =
325300                  FULLWD-EXPECTED-RESULT-15 THEN
325400            ADD 1 TO pass-count
325500          ELSE
325600        DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
325700        DISPLAY "test-value = " FULLWD-TEST-VALUE-15(JJ)
325800        DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-15
325900        DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-15
326000        DISPLAY " "
326100            ADD 1 TO fail-count
326200          END-IF;
326300       END-PERFORM;
326400       ADD 1 TO II;
326500*  START OF TEST 16
326600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
326700          COMPUTE
326800               FULLWD-ACTUAL-RESULT-16 = FUNCTION
326900                  INTEGER-PART(FULLWD-TEST-VALUE-16(JJ));
327000          IF FULLWD-ACTUAL-RESULT-16 =
327100                  FULLWD-EXPECTED-RESULT-16 THEN
327200            ADD 1 TO pass-count
327300          ELSE
327400        DISPLAY "FULLWORD TEST " II "," JJ " FAILED:"
327500        DISPLAY "test-value = " FULLWD-TEST-VALUE-16(JJ)
327600        DISPLAY "expected-result = " FULLWD-EXPECTED-RESULT-16
327700        DISPLAY "actual-result = " FULLWD-ACTUAL-RESULT-16
327800        DISPLAY " "
327900            ADD 1 TO fail-count
328000          END-IF;
328100       END-PERFORM;
328200       ADD 1 TO II;
328300
328400       IF fail-count NOT = ZERO AND
328500       pass-count NOT = NUM-OF-TEST * 3
328600       THEN
328700         DISPLAY "FULLWORD FAILURE";
328800         MOVE 1 TO ANY-FAILED;
328900       END-IF;
329000* END OF FULLWORD RUN
329100
329200*-----------------------------------------------------------------
329300* 11301130            Doubleword (9-18 digits)       | |
329400*-----------------------------------------------------------------
329500*
329600     MOVE NUM-TWINFW TO NUM-OF-TEST;
329700     MOVE 1 TO II;
329800
329900*  START OF TEST 1
330000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
330100          COMPUTE
330200               TWINFW-ACTUAL-RESULT-1 = FUNCTION
330300                  INTEGER-PART(TWINFW-TEST-VALUE-1(JJ));
330400          IF TWINFW-ACTUAL-RESULT-1 =
330500                  TWINFW-EXPECTED-RESULT-1 THEN
330600             ADD 1 TO pass-count
330700          ELSE
330800         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
330900         DISPLAY "test-value = " TWINFW-TEST-VALUE-1(JJ)
331000         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-1
331100         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-1
331200         DISPLAY " "
331300             ADD 1 TO fail-count
331400          END-IF;
331500       END-PERFORM;
331600       ADD 1 TO II;
331700*  START OF TEST 2
331800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
331900          COMPUTE
332000               TWINFW-ACTUAL-RESULT-2 = FUNCTION
332100                  INTEGER-PART(TWINFW-TEST-VALUE-2(JJ));
332200          IF TWINFW-ACTUAL-RESULT-2 =
332300                  TWINFW-EXPECTED-RESULT-2 THEN
332400             ADD 1 TO pass-count
332500          ELSE
332600         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
332700         DISPLAY "test-value = " TWINFW-TEST-VALUE-2(JJ)
332800         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-2
332900         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-2
333000         DISPLAY " "
333100             ADD 1 TO fail-count
333200          END-IF;
333300       END-PERFORM;
333400       ADD 1 TO II;
333500*  START OF TEST 3
333600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
333700          COMPUTE
333800               TWINFW-ACTUAL-RESULT-3 = FUNCTION
333900                  INTEGER-PART(TWINFW-TEST-VALUE-3(JJ));
334000          IF TWINFW-ACTUAL-RESULT-3 =
334100                  TWINFW-EXPECTED-RESULT-3 THEN
334200             ADD 1 TO pass-count
334300          ELSE
334400         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
334500         DISPLAY "test-value = " TWINFW-TEST-VALUE-3(JJ)
334600         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-3
334700         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-3
334800         DISPLAY " "
334900             ADD 1 TO fail-count
335000          END-IF;
335100       END-PERFORM;
335200       ADD 1 TO II;
335300*  START OF TEST 4
335400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
335500          COMPUTE
335600               TWINFW-ACTUAL-RESULT-4 = FUNCTION
335700                  INTEGER-PART(TWINFW-TEST-VALUE-4(JJ));
335800          IF TWINFW-ACTUAL-RESULT-4 =
335900                  TWINFW-EXPECTED-RESULT-4 THEN
336000             ADD 1 TO pass-count
336100          ELSE
336200         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
336300         DISPLAY "test-value = " TWINFW-TEST-VALUE-4(JJ)
336400         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-4
336500         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-4
336600         DISPLAY " "
336700             ADD 1 TO fail-count
336800          END-IF;
336900       END-PERFORM;
337000       ADD 1 TO II;
337100*  START OF TEST 5
337200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
337300          COMPUTE
337400               TWINFW-ACTUAL-RESULT-5 = FUNCTION
337500                  INTEGER-PART(TWINFW-TEST-VALUE-5(JJ));
337600          IF TWINFW-ACTUAL-RESULT-5 =
337700                  TWINFW-EXPECTED-RESULT-5 THEN
337800             ADD 1 TO pass-count
337900          ELSE
338000         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
338100         DISPLAY "test-value = " TWINFW-TEST-VALUE-5(JJ)
338200         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-5
338300         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-5
338400         DISPLAY " "
338500             ADD 1 TO fail-count
338600          END-IF;
338700       END-PERFORM;
338800       ADD 1 TO II;
338900*  START OF TEST 6
339000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
339100          COMPUTE
339200               TWINFW-ACTUAL-RESULT-6 = FUNCTION
339300                  INTEGER-PART(TWINFW-TEST-VALUE-6(JJ));
339400          IF TWINFW-ACTUAL-RESULT-6 =
339500                  TWINFW-EXPECTED-RESULT-6 THEN
339600             ADD 1 TO pass-count
339700          ELSE
339800         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
339900         DISPLAY "test-value = " TWINFW-TEST-VALUE-6(JJ)
340000         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-6
340100         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-6
340200         DISPLAY " "
340300             ADD 1 TO fail-count
340400          END-IF;
340500       END-PERFORM;
340600       ADD 1 TO II;
340700*  START OF TEST 7
340800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
340900          COMPUTE
341000               TWINFW-ACTUAL-RESULT-7 = FUNCTION
341100                  INTEGER-PART(TWINFW-TEST-VALUE-7(JJ));
341200          IF TWINFW-ACTUAL-RESULT-7 =
341300                  TWINFW-EXPECTED-RESULT-7 THEN
341400             ADD 1 TO pass-count
341500          ELSE
341600         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
341700         DISPLAY "test-value = " TWINFW-TEST-VALUE-7(JJ)
341800         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-7
341900         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-7
342000         DISPLAY " "
342100             ADD 1 TO fail-count
342200          END-IF;
342300       END-PERFORM;
342400       ADD 1 TO II;
342500*  START OF TEST 8
342600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
342700          COMPUTE
342800               TWINFW-ACTUAL-RESULT-8 = FUNCTION
342900                  INTEGER-PART(TWINFW-TEST-VALUE-8(JJ));
343000          IF TWINFW-ACTUAL-RESULT-8 =
343100                  TWINFW-EXPECTED-RESULT-8 THEN
343200             ADD 1 TO pass-count
343300          ELSE
343400         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
343500         DISPLAY "test-value = " TWINFW-TEST-VALUE-8(JJ)
343600         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-8
343700         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-8
343800         DISPLAY " "
343900             ADD 1 TO fail-count
344000          END-IF;
344100       END-PERFORM;
344200       ADD 1 TO II;
344300*  START OF TEST 9
344400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
344500          COMPUTE
344600               TWINFW-ACTUAL-RESULT-9 = FUNCTION
344700                  INTEGER-PART(TWINFW-TEST-VALUE-9(JJ));
344800          IF TWINFW-ACTUAL-RESULT-9 =
344900                  TWINFW-EXPECTED-RESULT-9 THEN
345000             ADD 1 TO pass-count
345100          ELSE
345200         DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
345300         DISPLAY "test-value = " TWINFW-TEST-VALUE-9(JJ)
345400         DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-9
345500         DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-9
345600         DISPLAY " "
345700             ADD 1 TO fail-count
345800          END-IF;
345900       END-PERFORM;
346000       ADD 1 TO II;
346100*  START OF TEST 10
346200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
346300          COMPUTE
346400               TWINFW-ACTUAL-RESULT-10 = FUNCTION
346500                  INTEGER-PART(TWINFW-TEST-VALUE-10(JJ));
346600          IF TWINFW-ACTUAL-RESULT-10 =
346700                  TWINFW-EXPECTED-RESULT-10 THEN
346800            ADD 1 TO pass-count
346900          ELSE
347000        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
347100        DISPLAY "test-value = " TWINFW-TEST-VALUE-10(JJ)
347200        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-10
347300        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-10
347400        DISPLAY " "
347500            ADD 1 TO fail-count
347600          END-IF;
347700       END-PERFORM;
347800       ADD 1 TO II;
347900*  START OF TEST 11
348000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
348100          COMPUTE
348200               TWINFW-ACTUAL-RESULT-11 = FUNCTION
348300                  INTEGER-PART(TWINFW-TEST-VALUE-11(JJ));
348400          IF TWINFW-ACTUAL-RESULT-11 =
348500                  TWINFW-EXPECTED-RESULT-11 THEN
348600            ADD 1 TO pass-count
348700          ELSE
348800        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
348900        DISPLAY "test-value = " TWINFW-TEST-VALUE-11(JJ)
349000        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-11
349100        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-11
349200        DISPLAY " "
349300            ADD 1 TO fail-count
349400          END-IF;
349500       END-PERFORM;
349600       ADD 1 TO II;
349700*  START OF TEST 12
349800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
349900          COMPUTE
350000               TWINFW-ACTUAL-RESULT-12 = FUNCTION
350100                  INTEGER-PART(TWINFW-TEST-VALUE-12(JJ));
350200          IF TWINFW-ACTUAL-RESULT-12 =
350300                  TWINFW-EXPECTED-RESULT-12 THEN
350400            ADD 1 TO pass-count
350500          ELSE
350600        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
350700        DISPLAY "test-value = " TWINFW-TEST-VALUE-12(JJ)
350800        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-12
350900        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-12
351000        DISPLAY " "
351100            ADD 1 TO fail-count
351200          END-IF;
351300       END-PERFORM;
351400       ADD 1 TO II;
351500*  START OF TEST 13
351600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
351700          COMPUTE
351800               TWINFW-ACTUAL-RESULT-13 = FUNCTION
351900                  INTEGER-PART(TWINFW-TEST-VALUE-13(JJ));
352000          IF TWINFW-ACTUAL-RESULT-13 =
352100                  TWINFW-EXPECTED-RESULT-13 THEN
352200            ADD 1 TO pass-count
352300          ELSE
352400        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
352500        DISPLAY "test-value = " TWINFW-TEST-VALUE-13(JJ)
352600        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-13
352700        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-13
352800        DISPLAY " "
352900            ADD 1 TO fail-count
353000          END-IF;
353100       END-PERFORM;
353200       ADD 1 TO II;
353300*  START OF TEST 14
353400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
353500          COMPUTE
353600               TWINFW-ACTUAL-RESULT-14 = FUNCTION
353700                  INTEGER-PART(TWINFW-TEST-VALUE-14(JJ));
353800          IF TWINFW-ACTUAL-RESULT-14 =
353900                  TWINFW-EXPECTED-RESULT-14 THEN
354000            ADD 1 TO pass-count
354100          ELSE
354200        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
354300        DISPLAY "test-value = " TWINFW-TEST-VALUE-14(JJ)
354400        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-14
354500        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-14
354600        DISPLAY " "
354700            ADD 1 TO fail-count
354800          END-IF;
354900       END-PERFORM;
355000       ADD 1 TO II;
355100*  START OF TEST 15
355200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
355300          COMPUTE
355400               TWINFW-ACTUAL-RESULT-15 = FUNCTION
355500                  INTEGER-PART(TWINFW-TEST-VALUE-15(JJ));
355600          IF TWINFW-ACTUAL-RESULT-15 =
355700                  TWINFW-EXPECTED-RESULT-15 THEN
355800            ADD 1 TO pass-count
355900          ELSE
356000        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
356100        DISPLAY "test-value = " TWINFW-TEST-VALUE-15(JJ)
356200        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-15
356300        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-15
356400        DISPLAY " "
356500            ADD 1 TO fail-count
356600          END-IF;
356700       END-PERFORM;
356800       ADD 1 TO II;
356900*  START OF TEST 16
357000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
357100          COMPUTE
357200               TWINFW-ACTUAL-RESULT-16 = FUNCTION
357300                  INTEGER-PART(TWINFW-TEST-VALUE-16(JJ));
357400          IF TWINFW-ACTUAL-RESULT-16 =
357500                  TWINFW-EXPECTED-RESULT-16 THEN
357600            ADD 1 TO pass-count
357700          ELSE
357800        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
357900        DISPLAY "test-value = " TWINFW-TEST-VALUE-16(JJ)
358000        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-16
358100        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-16
358200        DISPLAY " "
358300            ADD 1 TO fail-count
358400          END-IF;
358500       END-PERFORM;
358600       ADD 1 TO II;
358700*  START OF TEST 17
358800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
358900          COMPUTE
359000               TWINFW-ACTUAL-RESULT-17 = FUNCTION
359100                  INTEGER-PART(TWINFW-TEST-VALUE-17(JJ));
359200          IF TWINFW-ACTUAL-RESULT-17 =
359300                  TWINFW-EXPECTED-RESULT-17 THEN
359400            ADD 1 TO pass-count
359500          ELSE
359600        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
359700        DISPLAY "test-value = " TWINFW-TEST-VALUE-17(JJ)
359800        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-17
359900        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-17
360000        DISPLAY " "
360100            ADD 1 TO fail-count
360200          END-IF;
360300       END-PERFORM;
360400       ADD 1 TO II;
360500*  START OF TEST 18
360600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
360700          COMPUTE
360800               TWINFW-ACTUAL-RESULT-18 = FUNCTION
360900                  INTEGER-PART(TWINFW-TEST-VALUE-18(JJ));
361000          IF TWINFW-ACTUAL-RESULT-18 =
361100                  TWINFW-EXPECTED-RESULT-18 THEN
361200            ADD 1 TO pass-count
361300          ELSE
361400        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
361500        DISPLAY "test-value = " TWINFW-TEST-VALUE-18(JJ)
361600        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-18
361700        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-18
361800        DISPLAY " "
361900            ADD 1 TO fail-count
362000          END-IF;
362100       END-PERFORM;
362200       ADD 1 TO II;
362300*  START OF TEST 19
362400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
362500          COMPUTE
362600               TWINFW-ACTUAL-RESULT-19 = FUNCTION
362700                  INTEGER-PART(TWINFW-TEST-VALUE-19(JJ));
362800          IF TWINFW-ACTUAL-RESULT-19 =
362900                  TWINFW-EXPECTED-RESULT-19 THEN
363000            ADD 1 TO pass-count
363100          ELSE
363200        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
363300        DISPLAY "test-value = " TWINFW-TEST-VALUE-19(JJ)
363400        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-19
363500        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-19
363600        DISPLAY " "
363700            ADD 1 TO fail-count
363800          END-IF;
363900       END-PERFORM;
364000       ADD 1 TO II;
364100*  START OF TEST 20
364200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
364300          COMPUTE
364400               TWINFW-ACTUAL-RESULT-20 = FUNCTION
364500                  INTEGER-PART(TWINFW-TEST-VALUE-20(JJ));
364600          IF TWINFW-ACTUAL-RESULT-20 =
364700                  TWINFW-EXPECTED-RESULT-20 THEN
364800            ADD 1 TO pass-count
364900          ELSE
365000        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
365100        DISPLAY "test-value = " TWINFW-TEST-VALUE-20(JJ)
365200        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-20
365300        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-20
365400        DISPLAY " "
365500            ADD 1 TO fail-count
365600          END-IF;
365700       END-PERFORM;
365800       ADD 1 TO II;
365900*  START OF TEST 21
366000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
366100          COMPUTE
366200               TWINFW-ACTUAL-RESULT-21 = FUNCTION
366300                  INTEGER-PART(TWINFW-TEST-VALUE-21(JJ));
366400          IF TWINFW-ACTUAL-RESULT-21 =
366500                  TWINFW-EXPECTED-RESULT-21 THEN
366600            ADD 1 TO pass-count
366700          ELSE
366800        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
366900        DISPLAY "test-value = " TWINFW-TEST-VALUE-21(JJ)
367000        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-21
367100        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-21
367200        DISPLAY " "
367300            ADD 1 TO fail-count
367400          END-IF;
367500       END-PERFORM;
367600       ADD 1 TO II;
367700*  START OF TEST 22
367800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
367900          COMPUTE
368000               TWINFW-ACTUAL-RESULT-22 = FUNCTION
368100                  INTEGER-PART(TWINFW-TEST-VALUE-22(JJ));
368200          IF TWINFW-ACTUAL-RESULT-22 =
368300                  TWINFW-EXPECTED-RESULT-22 THEN
368400            ADD 1 TO pass-count
368500          ELSE
368600        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
368700        DISPLAY "test-value = " TWINFW-TEST-VALUE-22(JJ)
368800        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-22
368900        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-22
369000        DISPLAY " "
369100            ADD 1 TO fail-count
369200          END-IF;
369300       END-PERFORM;
369400       ADD 1 TO II;
369500*  START OF TEST 23
369600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
369700          COMPUTE
369800               TWINFW-ACTUAL-RESULT-23 = FUNCTION
369900                  INTEGER-PART(TWINFW-TEST-VALUE-23(JJ));
370000          IF TWINFW-ACTUAL-RESULT-23 =
370100                  TWINFW-EXPECTED-RESULT-23 THEN
370200            ADD 1 TO pass-count
370300          ELSE
370400        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
370500        DISPLAY "test-value = " TWINFW-TEST-VALUE-23(JJ)
370600        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-23
370700        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-23
370800        DISPLAY " "
370900            ADD 1 TO fail-count
371000          END-IF;
371100       END-PERFORM;
371200       ADD 1 TO II;
371300*  START OF TEST 24
371400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
371500          COMPUTE
371600               TWINFW-ACTUAL-RESULT-24 = FUNCTION
371700                  INTEGER-PART(TWINFW-TEST-VALUE-24(JJ));
371800          IF TWINFW-ACTUAL-RESULT-24 =
371900                  TWINFW-EXPECTED-RESULT-24 THEN
372000            ADD 1 TO pass-count
372100          ELSE
372200        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
372300        DISPLAY "test-value = " TWINFW-TEST-VALUE-24(JJ)
372400        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-24
372500        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-24
372600        DISPLAY " "
372700            ADD 1 TO fail-count
372800          END-IF;
372900       END-PERFORM;
373000       ADD 1 TO II;
373100*  START OF TEST 25
373200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
373300          COMPUTE
373400               TWINFW-ACTUAL-RESULT-25 = FUNCTION
373500                  INTEGER-PART(TWINFW-TEST-VALUE-25(JJ));
373600          IF TWINFW-ACTUAL-RESULT-25 =
373700                  TWINFW-EXPECTED-RESULT-25 THEN
373800            ADD 1 TO pass-count
373900          ELSE
374000        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
374100        DISPLAY "test-value = " TWINFW-TEST-VALUE-25(JJ)
374200        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-25
374300        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-25
374400        DISPLAY " "
374500            ADD 1 TO fail-count
374600          END-IF;
374700       END-PERFORM;
374800       ADD 1 TO II;
374900*  START OF TEST 26
375000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
375100          COMPUTE
375200               TWINFW-ACTUAL-RESULT-26 = FUNCTION
375300                  INTEGER-PART(TWINFW-TEST-VALUE-26(JJ));
375400          IF TWINFW-ACTUAL-RESULT-26 =
375500                  TWINFW-EXPECTED-RESULT-26 THEN
375600            ADD 1 TO pass-count
375700          ELSE
375800        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
375900        DISPLAY "test-value = " TWINFW-TEST-VALUE-26(JJ)
376000        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-26
376100        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-26
376200        DISPLAY " "
376300            ADD 1 TO fail-count
376400          END-IF;
376500       END-PERFORM;
376600       ADD 1 TO II;
376700*  START OF TEST 27
376800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
376900          COMPUTE
377000               TWINFW-ACTUAL-RESULT-27 = FUNCTION
377100                  INTEGER-PART(TWINFW-TEST-VALUE-27(JJ));
377200          IF TWINFW-ACTUAL-RESULT-27 =
377300                  TWINFW-EXPECTED-RESULT-27 THEN
377400            ADD 1 TO pass-count
377500          ELSE
377600        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
377700        DISPLAY "test-value = " TWINFW-TEST-VALUE-27(JJ)
377800        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-27
377900        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-27
378000        DISPLAY " "
378100            ADD 1 TO fail-count
378200          END-IF;
378300       END-PERFORM;
378400       ADD 1 TO II;
378500*  START OF TEST 28
378600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
378700          COMPUTE
378800               TWINFW-ACTUAL-RESULT-28 = FUNCTION
378900                  INTEGER-PART(TWINFW-TEST-VALUE-28(JJ));
379000          IF TWINFW-ACTUAL-RESULT-28 =
379100                  TWINFW-EXPECTED-RESULT-28 THEN
379200            ADD 1 TO pass-count
379300          ELSE
379400        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
379500        DISPLAY "test-value = " TWINFW-TEST-VALUE-28(JJ)
379600        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-28
379700        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-28
379800        DISPLAY " "
379900            ADD 1 TO fail-count
380000          END-IF;
380100       END-PERFORM;
380200       ADD 1 TO II;
380300*  START OF TEST 29
380400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
380500          COMPUTE
380600               TWINFW-ACTUAL-RESULT-29 = FUNCTION
380700                  INTEGER-PART(TWINFW-TEST-VALUE-29(JJ));
380800          IF TWINFW-ACTUAL-RESULT-29 =
380900                  TWINFW-EXPECTED-RESULT-29 THEN
381000            ADD 1 TO pass-count
381100          ELSE
381200        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
381300        DISPLAY "test-value = " TWINFW-TEST-VALUE-29(JJ)
381400        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-29
381500        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-29
381600        DISPLAY " "
381700            ADD 1 TO fail-count
381800          END-IF;
381900       END-PERFORM;
382000       ADD 1 TO II;
382100*  START OF TEST 30
382200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
382300          COMPUTE
382400               TWINFW-ACTUAL-RESULT-30 = FUNCTION
382500                  INTEGER-PART(TWINFW-TEST-VALUE-30(JJ));
382600          IF TWINFW-ACTUAL-RESULT-30 =
382700                  TWINFW-EXPECTED-RESULT-30 THEN
382800            ADD 1 TO pass-count
382900          ELSE
383000        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
383100        DISPLAY "test-value = " TWINFW-TEST-VALUE-30(JJ)
383200        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-30
383300        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-30
383400        DISPLAY " "
383500            ADD 1 TO fail-count
383600          END-IF;
383700       END-PERFORM;
383800       ADD 1 TO II;
383900*  START OF TEST 31
384000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
384100          COMPUTE
384200               TWINFW-ACTUAL-RESULT-31 = FUNCTION
384300                  INTEGER-PART(TWINFW-TEST-VALUE-31(JJ));
384400          IF TWINFW-ACTUAL-RESULT-31 =
384500                  TWINFW-EXPECTED-RESULT-31 THEN
384600            ADD 1 TO pass-count
384700          ELSE
384800        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
384900        DISPLAY "test-value = " TWINFW-TEST-VALUE-31(JJ)
385000        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-31
385100        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-31
385200        DISPLAY " "
385300            ADD 1 TO fail-count
385400          END-IF;
385500       END-PERFORM;
385600       ADD 1 TO II;
385700*  START OF TEST 32
385800        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
385900          COMPUTE
386000               TWINFW-ACTUAL-RESULT-32 = FUNCTION
386100                  INTEGER-PART(TWINFW-TEST-VALUE-32(JJ));
386200          IF TWINFW-ACTUAL-RESULT-32 =
386300                  TWINFW-EXPECTED-RESULT-32 THEN
386400            ADD 1 TO pass-count
386500          ELSE
386600        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
386700        DISPLAY "test-value = " TWINFW-TEST-VALUE-32(JJ)
386800        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-32
386900        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-32
387000        DISPLAY " "
387100            ADD 1 TO fail-count
387200          END-IF;
387300       END-PERFORM;
387400       ADD 1 TO II;
387500*  START OF TEST 33
387600        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
387700          COMPUTE
387800               TWINFW-ACTUAL-RESULT-33 = FUNCTION
387900                  INTEGER-PART(TWINFW-TEST-VALUE-33(JJ));
388000          IF TWINFW-ACTUAL-RESULT-33 =
388100                  TWINFW-EXPECTED-RESULT-33 THEN
388200            ADD 1 TO pass-count
388300          ELSE
388400        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
388500        DISPLAY "test-value = " TWINFW-TEST-VALUE-33(JJ)
388600        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-33
388700        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-33
388800        DISPLAY " "
388900            ADD 1 TO fail-count
389000          END-IF;
389100       END-PERFORM;
389200       ADD 1 TO II;
389300*  START OF TEST 34
389400        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
389500          COMPUTE
389600               TWINFW-ACTUAL-RESULT-34 = FUNCTION
389700                  INTEGER-PART(TWINFW-TEST-VALUE-34(JJ));
389800          IF TWINFW-ACTUAL-RESULT-34 =
389900                  TWINFW-EXPECTED-RESULT-34 THEN
390000            ADD 1 TO pass-count
390100          ELSE
390200        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
390300        DISPLAY "test-value = " TWINFW-TEST-VALUE-34(JJ)
390400        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-34
390500        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-34
390600        DISPLAY " "
390700            ADD 1 TO fail-count
390800          END-IF;
390900       END-PERFORM;
391000       ADD 1 TO II;
391100*  START OF TEST 35
391200        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
391300          COMPUTE
391400               TWINFW-ACTUAL-RESULT-35 = FUNCTION
391500                  INTEGER-PART(TWINFW-TEST-VALUE-35(JJ));
391600          IF TWINFW-ACTUAL-RESULT-35 =
391700                  TWINFW-EXPECTED-RESULT-35 THEN
391800            ADD 1 TO pass-count
391900          ELSE
392000        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
392100        DISPLAY "test-value = " TWINFW-TEST-VALUE-35(JJ)
392200        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-35
392300        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-35
392400        DISPLAY " "
392500            ADD 1 TO fail-count
392600          END-IF;
392700       END-PERFORM;
392800       ADD 1 TO II;
392900*  START OF TEST 36
393000        PERFORM VARYING JJ FROM 1 BY 1 UNTIL JJ > 3;
393100          COMPUTE
393200               TWINFW-ACTUAL-RESULT-36 = FUNCTION
393300                  INTEGER-PART(TWINFW-TEST-VALUE-36(JJ));
393400          IF TWINFW-ACTUAL-RESULT-36 =
393500                  TWINFW-EXPECTED-RESULT-36 THEN
393600            ADD 1 TO pass-count
393700          ELSE
393800        DISPLAY "TWIN FULLWORD TEST " II "," JJ " FAILED:"
393900        DISPLAY "test-value = " TWINFW-TEST-VALUE-36(JJ)
394000        DISPLAY "expected-result = " TWINFW-EXPECTED-RESULT-36
394100        DISPLAY "actual-result = " TWINFW-ACTUAL-RESULT-36
394200        DISPLAY " "
394300            ADD 1 TO fail-count
394400          END-IF;
394500       END-PERFORM;
394600       ADD 1 TO II;
394700
394800       IF fail-count NOT = ZERO AND
394900       pass-count NOT = NUM-OF-TEST * 3
395000       THEN
395100         DISPLAY "TWIN FULLWORD FAILURE";
395200         MOVE 1 TO ANY-FAILED;
395300       END-IF;
395400* END OF TWIN FULLWORD  RUN
395500
395600
395700*-----------------------------------------------------------------
395800* 11312000      SIGN IS .. SEPARATE CHARACTER:       | |
395900* 11312100        LEADING                            |f|
396000*-----------------------------------------------------------------
396100*
396200     MOVE 2 TO NUM-OF-TEST;
396300
396400* TEST 1 FOR SIGN IS LEADING CLAUSE
396500     MOVE 123.9 TO LEADING-SIGN-ITEM;
396600     MOVE 123 TO LEAD-EXP-VAL;
396700     COMPUTE ACTUAL-RES-L = FUNCTION
396800     INTEGER-PART(LEADING-SIGN-ITEM);
396900          IF ACTUAL-RES-L IS EQUAL
397000               TO LEAD-EXP-VAL THEN
397100            ADD 1 TO pass-count
397200          ELSE
397300        DISPLAY "LEADING SIGN TEST 1 FAILED:"
397400        DISPLAY "test-value = " LEADING-SIGN-ITEM
397500        DISPLAY "expected-result = " LEAD-EXP-VAL
397600        DISPLAY "actual-result = " ACTUAL-RES-L
397700        DISPLAY " "
397800            ADD 1 TO fail-count
397900          END-IF;
398000
398100* TEST 2 FOR SIGN IS LEADING CLAUSE
398200     MOVE -123.4 TO LEADING-SIGN-ITEM;
398300     MOVE -123 TO LEAD-EXP-VAL;
398400     COMPUTE ACTUAL-RES-L = FUNCTION
398500     INTEGER-PART(LEADING-SIGN-ITEM);
398600          IF ACTUAL-RES-L = LEAD-EXP-VAL THEN
398700            ADD 1 TO pass-count
398800          ELSE
398900        DISPLAY "LEADING SIGN TEST 2 FAILED:"
399000        DISPLAY "test-value = " LEADING-SIGN-ITEM
399100        DISPLAY "expected-result = " LEAD-EXP-VAL
399200        DISPLAY "actual-result = " ACTUAL-RES-L
399300        DISPLAY " "
399400            ADD 1 TO fail-count
399500          END-IF;
399600
399700       IF fail-count NOT = ZERO AND
399800       pass-count NOT = NUM-OF-TEST
399900       THEN
400000         DISPLAY "SIGN IS LEADING CLAUSE FAILED";
400100         MOVE 1 TO ANY-FAILED;
400200       END-IF;
400300* END OF SIGN IS LEADING CLAUSE
400400
400500*-----------------------------------------------------------------
400600* 11312200        TRAILING                           |f|
400700*-----------------------------------------------------------------
400800     MOVE 2 TO NUM-OF-TEST;
400900* TEST 1 FOR SIGN IS TRAILING CLAUSE
401000     MOVE 123.9 TO TRAILING-SIGN-ITEM;
401100     MOVE 123 TO TRAIL-EXP-VAL;
401200     COMPUTE ACTUAL-RES-T = FUNCTION
401300     INTEGER-PART(TRAILING-SIGN-ITEM);
401400          IF ACTUAL-RES-T = TRAIL-EXP-VAL THEN
401500            ADD 1 TO pass-count
401600          ELSE
401700        DISPLAY "TRAILING SIGN TEST 1 FAILED:"
401800        DISPLAY "test-value = " TRAILING-SIGN-ITEM
401900        DISPLAY "expected-result = " TRAIL-EXP-VAL
402000        DISPLAY "actual-result = " ACTUAL-RES-T
402100        DISPLAY " "
402200            ADD 1 TO fail-count
402300          END-IF;
402400
402500* TEST 2 FOR SIGN IS TRAILING CLAUSE
402600     MOVE -123.4 TO TRAILING-SIGN-ITEM;
402700     MOVE -123 TO TRAIL-EXP-VAL;
402800     COMPUTE ACTUAL-RES-T = FUNCTION
402900     INTEGER-PART(TRAILING-SIGN-ITEM);
403000          IF ACTUAL-RES-T = TRAIL-EXP-VAL THEN
403100            ADD 1 TO pass-count
403200          ELSE
403300        DISPLAY "TRAILING SIGN TEST 2 FAILED:"
403400        DISPLAY "test-value = " TRAILING-SIGN-ITEM
403500        DISPLAY "expected-result = " TRAIL-EXP-VAL
403600        DISPLAY "actual-result = " ACTUAL-RES-T
403700        DISPLAY " "
403800            ADD 1 TO fail-count
403900          END-IF;
404000
404100       IF fail-count NOT = ZERO AND
404200       pass-count NOT = NUM-OF-TEST
404300       THEN
404400         DISPLAY "SIGN IS TRAILING CLAUSE FAILED";
404500         MOVE 1 TO ANY-FAILED;
404600       END-IF;
404700* END OF SIGN IS TRAILING CLAUSE
404800
404900*-----------------------------------------------------------------
405000* 11303000      Qualified                            |f|
405100*-----------------------------------------------------------------
405200     MOVE 4 TO NUM-OF-TEST;
405300
405400* TEST 1 FOR QUALIFIED STRUCTURE
405500     MOVE 123.9 TO element of Part-A;
405600     MOVE 123 TO QUALIFIED-COMP-3-EXP;
405700     COMPUTE QUALIFIED-COMP-3-RES =
405800      FUNCTION INTEGER-PART(element of Part-A);
405900          IF QUALIFIED-COMP-3-RES =
406000                        QUALIFIED-COMP-3-EXP  THEN
406100            ADD 1 TO pass-count
406200          ELSE
406300        DISPLAY "QUALIFIED STRUCTURE TEST 1 FAILED:"
406400        DISPLAY "test-value = " element of Part-A
406500        DISPLAY "expected-result = " QUALIFIED-COMP-3-EXP
406600        DISPLAY "actual-result = " QUALIFIED-COMP-3-RES
406700        DISPLAY " "
406800            ADD 1 TO fail-count
406900          END-IF;
407000
407100* TEST 2 FOR QUALIFIED STRUCTURE
407200     MOVE -123.4 TO element of Part-A;
407300     MOVE -123 TO QUALIFIED-COMP-3-EXP;
407400     COMPUTE QUALIFIED-COMP-3-RES =
407500      FUNCTION INTEGER-PART(element of Part-A);
407600          IF QUALIFIED-COMP-3-RES =
407700                        QUALIFIED-COMP-3-EXP  THEN
407800            ADD 1 TO pass-count
407900          ELSE
408000        DISPLAY "QUALIFIED STRUCTURE TEST 2 FAILED:"
408100        DISPLAY "test-value = " element of Part-A
408200        DISPLAY "expected-result = " QUALIFIED-COMP-3-EXP
408300        DISPLAY "actual-result = " QUALIFIED-COMP-3-RES
408400        DISPLAY " "
408500            ADD 1 TO fail-count
408600          END-IF;
408700
408800* TEST 3 FOR QUALIFIED STRUCTURE
408900     MOVE 123.9 TO element of Part-B;
409000     MOVE 123 TO QUALIFIED-COMP-3-EXP;
409100     COMPUTE QUALIFIED-COMP-3-RES =
409200      FUNCTION INTEGER-PART(element of Part-B);
409300          IF QUALIFIED-COMP-3-RES =
409400                        QUALIFIED-COMP-3-EXP  THEN
409500            ADD 1 TO pass-count
409600          ELSE
409700        DISPLAY "QUALIFIED STRUCTURE TEST 3 FAILED:"
409800        DISPLAY "test-value = " element of Part-B
409900        DISPLAY "expected-result = " QUALIFIED-COMP-3-EXP
410000        DISPLAY "actual-result = " QUALIFIED-COMP-3-RES
410100        DISPLAY " "
410200            ADD 1 TO fail-count
410300          END-IF;
410400
410500* TEST 4 FOR QUALIFIED STRUCTURE
410600     MOVE -123.4 TO element of Part-B;
410700     MOVE -123 TO QUALIFIED-COMP-3-EXP;
410800     COMPUTE QUALIFIED-COMP-3-RES =
410900      FUNCTION INTEGER-PAendRT(element of Part-B);
411000          IF QUALIFIED-COMP-3-RES =
411100                        QUALIFIED-COMP-3-EXP  THEN
411200            ADD 1 TO pass-count
411300          ELSE
411400        DISPLAY "QUALIFIED STRUCTURE TEST 4 FAILED:"
411500        DISPLAY "test-value = " element of Part-B
411600        DISPLAY "expected-result = " QUALIFIED-COMP-3-EXP
411700        DISPLAY "actual-result = " QUALIFIED-COMP-3-RES
411800        DISPLAY " "
411900            ADD 1 TO fail-count
412000          END-IF;
412100
412200       IF fail-count NOT = ZERO AND
412300       pass-count NOT = NUM-OF-TEST
412400       THEN
412500         DISPLAY "QUALIFIED STRUCTURE FAILED";
412600         MOVE 1 TO ANY-FAILED;
412700       END-IF;
412800* END OF QUALIFIED STRUCTURE
412900
413000*-----------------------------------------------------------------
413100* 11310000      SYNC                         |f|
413200*-----------------------------------------------------------------
413300     MOVE 14 TO NUM-OF-TEST;
413400
413500* TEST 1 FOR SYNC ITEMS
413600     MOVE 123.9 TO z-sync-item;
413700     MOVE 123 TO   Z-SYNC-EXP;
413800     COMPUTE Z-SYNC-RES = FUNCTION INTEGER-PART(z-sync-item);
413900          IF Z-SYNC-RES = Z-SYNC-EXP THEN
414000            ADD 1 TO pass-count
414100          ELSE
414200        DISPLAY "SYNC ITEM 1 FAILED:"
414300        DISPLAY "test-value = " z-sync-item
414400        DISPLAY "expected-result = " Z-SYNC-EXP
414500        DISPLAY "actual-result = " Z-SYNC-RES
414600        DISPLAY " "
414700            ADD 1 TO fail-count
414800          END-IF;
414900
415000* TEST 2 FOR SYNC ITEMS
415100     MOVE -123.9 TO z-sync-item;
415200     MOVE -123 TO   Z-SYNC-EXP;
415300     COMPUTE Z-SYNC-RES = FUNCTION INTEGER-PART(z-sync-item);
415400          IF Z-SYNC-RES = Z-SYNC-EXP THEN
415500            ADD 1 TO pass-count
415600          ELSE
415700        DISPLAY "SYNC ITEM 2 FAILED:"
415800        DISPLAY "test-value = " z-sync-item
415900        DISPLAY "expected-result = " Z-SYNC-EXP
416000        DISPLAY "actual-result = " Z-SYNC-RES
416100        DISPLAY " "
416200            ADD 1 TO fail-count
416300          END-IF;
416400
416500* TEST 3 FOR SYNC ITEMS
416600     MOVE 1234.9 TO h-sync-item;
416700     MOVE 1234 TO   H-SYNC-EXP;
416800     COMPUTE H-SYNC-RES = FUNCTION INTEGER-PART(h-sync-item);
416900          IF H-SYNC-RES = H-SYNC-EXP THEN
417000            ADD TO pass-count
417100          ELSE
417200        DISPLAY "SYNC ITEM 3 FAILED:"
417300        DISPLAY "test-value = " h-sync-item
417400        DISPLAY "expected-result = " H-SYNC-EXP
417500        DISPLAY "actual-result = " H-SYNC-RES
417600        DISPLAY " "
417700            ADD 1 TO fail-count
417800          END-IF;
417900
418000* TEST 4 FOR SYNC ITEMS
418100     MOVE -1234.9 TO h-sync-item;
418200     MOVE -1234 TO   H-SYNC-EXP;
418300     COMPUTE H-SYNC-RES = FUNCTION INTEGER-PART(h-sync-item);
418400          IF H-SYNC-RES = H-SYNC-EXP THEN
418500            ADD 1 TO pass-count
418600          ELSE
418700        DISPLAY "SYNC ITEM 4 FAILED:"
418800        DISPLAY "test-value = " h-sync-item
418900        DISPLAY "expected-result = " H-SYNC-EXP
419000        DISPLAY "actual-result = " H-SYNC-RES
419100        DISPLAY " "
419200            ADD 1 TO fail-count
419300          END-IF;
419400
419500* TEST 5 FOR SYNC ITEMS
419600     MOVE 12345678.9 TO f-sync-item;
419700     MOVE 12345678 TO   F-SYNC-EXP;
419800     COMPUTE F-SYNC-RES = FUNCTION INTEGER-PART(f-sync-item);
419900          IF F-SYNC-RES = F-SYNC-EXP THEN
420000            ADD 1 TO pass-count
420100          ELSE
420200        DISPLAY "SYNC ITEM 5 FAILED:"
420300        DISPLAY "test-value = " f-sync-item
420400        DISPLAY "expected-result = " F-SYNC-EXP
420500        DISPLAY "actual-result = " F-SYNC-RES
420600        DISPLAY " "
420700            ADD 1 TO fail-count
420800          END-IF;
420900
421000* TEST 6 FOR SYNC ITEMS
421100     MOVE -12345678.9 TO f-sync-item;
421200     MOVE -12345678 TO   F-SYNC-EXP;
421300     COMPUTE F-SYNC-RES = FUNCTION INTEGER-PART(f-sync-item);
421400          IF F-SYNC-RES = F-SYNC-EXP THEN
421500            ADD 1 TO pass-count
421600          ELSE
421700        DISPLAY "SYNC ITEM 6 FAILED:"
421800        DISPLAY "test-value = " f-sync-item
421900        DISPLAY "expected-result = " F-SYNC-EXP
422000        DISPLAY "actual-result = " F-SYNC-RES
422100        DISPLAY " "
422200            ADD 1 TO fail-count
422300          END-IF;
422400
422500* TEST 7 FOR SYNC ITEMS
422600     MOVE 12345678909868546.9 TO ff-sync-item;
422700     MOVE 12345678909868546 TO   FF-SYNC-EXP;
422800     COMPUTE FF-SYNC-RES = FUNCTION INTEGER-PART(ff-sync-item);
422900          IF FF-SYNC-RES = FF-SYNC-EXP THEN
423000            ADD 1 TO pass-count
423100          ELSE
423200        DISPLAY "SYNC ITEM 7 FAILED:"
423300        DISPLAY "test-value = " ff-sync-item
423400        DISPLAY "expected-result = " FF-SYNC-EXP
423500        DISPLAY "actual-result = " FF-SYNC-RES
423600        DISPLAY " "
423700            ADD 1 TO fail-count
423800          END-IF;
423900
424000* TEST 8 FOR SYNC ITEMS
424100     MOVE -12345678909868546.9 TO ff-sync-item;
424200     MOVE -12345678909868546 TO   FF-SYNC-EXP;
424300     COMPUTE FF-SYNC-RES = FUNCTION INTEGER-PART(ff-sync-item);
424400          IF FF-SYNC-RES = FF-SYNC-EXP THEN
424500            ADD 1 TO pass-count
424600          ELSE
424700        DISPLAY "SYNC ITEM 8 FAILED:"
424800        DISPLAY "test-value = " ff-sync-item
424900        DISPLAY "expected-result = " FF-SYNC-EXP
425000        DISPLAY "actual-result = " FF-SYNC-RES
425100        DISPLAY " "
425200            ADD 1 TO fail-count
425300          END-IF;
425400
425500* TEST 9 FOR SYNC ITEMS
425600     MOVE 123.9 TO p-sync-item;
425700     MOVE 123 TO   P-SYNC-EXP;
425800     COMPUTE P-SYNC-RES = FUNCTION INTEGER-PART(p-sync-item);
425900          IF P-SYNC-RES = P-SYNC-EXP THEN
426000            ADD 1 TO pass-count
426100          ELSE
426200        DISPLAY "SYNC ITEM 9 FAILED:"
426300        DISPLAY "test-value = " p-sync-item
426400        DISPLAY "expected-result = " P-SYNC-EXP
426500        DISPLAY "actual-result = " P-SYNC-RES
426600        DISPLAY " "
426700            ADD 1 TO fail-count
426800          END-IF;
426900
427000* TEST 10 FOR SYNC ITEMS
427100     MOVE -123.9 TO p-sync-item;
427200     MOVE -123 TO   P-SYNC-EXP;
427300     COMPUTE P-SYNC-RES = FUNCTION INTEGER-PART(p-sync-item);
427400          IF P-SYNC-RES = P-SYNC-EXP THEN
427500            ADD 1 TO pass-count
427600          ELSE
427700        DISPLAY "SYNC ITEM 10 FAILED:"
427800        DISPLAY "test-value = " p-sync-item
42790end0        DISPLAY "expected-result = " P-SYNC-EXP
428000        DISPLAY "actual-result = " P-SYNC-RES
428100        DISPLAY " "
428200            ADD 1 TO fail-count
428300          END-IF;
428400
428500* TEST 11 FOR SYNC ITEMS
428600     MOVE 1048575.9 TO e-sync-item;
428700     MOVE 1048575 TO   E-SYNC-EXP;
428800     COMPUTE E-SYNC-RES = FUNCTION INTEGER-PART(e-sync-item);
428900          IF E-SYNC-RES = E-SYNC-EXP THEN
429000            ADD 1 TO pass-count
429100          ELSE
429200        DISPLAY "SYNC ITEM 11 FAILED:"
429300        DISPLAY "test-value = " e-sync-item
429400        DISPLAY "expected-result = " E-SYNC-EXP
429500        DISPLAY "actual-result = " E-SYNC-RES
429600        DISPLAY " "
429700            ADD 1 TO fail-count
429800          END-IF;
429900
430000* TEST 12 FOR SYNC ITEMS
430100     MOVE -1048575.9 TO e-sync-item;
430200     MOVE -1048575 TO   E-SYNC-EXP;
430300     COMPUTE E-SYNC-RES = FUNCTION INTEGER-PART(e-sync-item);
430400          IF E-SYNC-RES = E-SYNC-EXP THEN
430500            ADD 1 TO pass-count
430600          ELSE
430700        DISPLAY "SYNC ITEM 12 FAILED:"
430800        DISPLAY "test-value = " e-sync-item
430900        DISPLAY "expected-result = " E-SYXP
431000        DISPLAY "actual-result = " E-SYNC-RES
431100        DISPLAY " "
431200            ADD 1 TO fail-count
431300          END-IF;
431400
431500* TEST 13 FOR SYNC ITEMS
431600     MOVE 45035996270495.9 TO d-sync-item;
431700     MOVE 45035996270495 TO   D-SYNC-EXP;
431800     COMPUTE D-SYNC-RES = FUNCTION INTEGER-PART(d-sync-item);
431900          IF D-SYNC-RES = D-SYNC-EXP THEN
432000            ADD 1 TO pass-count
432100          ELSE
432200        DISPLAY "SYNC ITEM 13 FAILED:"
432300        DISPLAY "test-value = " d-sync-item
432400        DISPLAY "expected-result = " D-SYNC-EXP
432500        DISPLAY "actual-result = " D-SYNC-RES
432600        DISPLAY " "
432700            ADD 1 TO fail-count
432800          END-IF;
432900
433000* TEST 14 FOR SYNC ITEMS
433100     MOVE -45035996270495.9 TO d-sync-item;
433200     MOVE -45035end-996270495 TO   D-SYNC-EXP;
433300     COMPUTE D-SYNC-RES = FUNCTION INTEGER-PART(d-sync-item);
433400          IF D-SYNC-RES = D-SYNC-EXP THEN
433500            ADD 1 TO pass-count
433600          ELSE
433700        DISPLAY "SYNC ITEM 14 FAILED:"
433800        DISPLAY "test-value = " d-sync-item
433900        DISPLAY "expected-result = " D-SYNC-EXP
434000        DISPLAY "actual-resultif= " D-SYNC-RES
434100        DISPLAY " "
434200            ADD 1 TO fail-count
434300          END-IF;
434400
434500       IF fail-count NOT = ZERO AND
434600       pass-NOT = NUM-OF-TEST
434700       THEN
434800         DISPLAY "SYNC ITEMS FAIL ED";
434900         MOVE 1 TO ANYif-FAILED;
435000-       -IF.
435100* END OF SYNC ITEMS
435200
435300*--------------------------------------------------------

